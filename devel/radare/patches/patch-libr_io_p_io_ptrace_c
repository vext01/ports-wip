$OpenBSD$
--- libr/io/p/io_ptrace.c.orig	Thu Mar 10 09:56:52 2011
+++ libr/io/p/io_ptrace.c	Thu Mar 10 10:16:17 2011
@@ -13,6 +13,15 @@
 #include <sys/wait.h>
 #include <errno.h>
 
+#if defined(__OpenBSD__)
+#define PTRACE_PEEKTEXT		PT_READ_I
+#define PTRACE_POKETEXT		PT_WRITE_I
+#define PTRACE_PEEKDATA		PT_READ_D
+#define PTRACE_POKEDATA		PT_WRITE_D
+#define PTRACE_ATTACH		PT_ATTACH
+#define PTRACE_DETACH		PT_DETACH
+#endif
+
 typedef struct {
 	int pid;
 	int tid;
@@ -28,7 +37,11 @@ static int __waitpid(int pid) {
 	return (waitpid (pid, &st, 0) != -1);
 }
 
+#if defined(__OpenBSD__)
+#define debug_read_raw(x,y) ptrace(PT_READ_I, x, y, 0)
+#else
 #define debug_read_raw(x,y) ptrace(PTRACE_PEEKTEXT, x, y, 0)
+#endif
 
 static int debug_os_read_at(int pid, void *buf, int sz, ut64 addr) {
 	unsigned long words = sz / sizeof (long);
@@ -65,12 +78,24 @@ static int ptrace_write_at(int pid, const ut8 *buf, in
 	long x, lr;
 
 	for (x=0; x<words; x++)
+#if defined(__OpenBSD__)
+		if (ptrace (PT_WRITE_D, pid, &((long *)(long)addr)[x], ((long *)buf)[x]))
+#else
 		if (ptrace (PTRACE_POKEDATA, pid, &((long *)(long)addr)[x], ((long *)buf)[x]))
+#endif
 			goto err;
 	if (last) {
+#if defined(__OpenBSD__)
+		lr = ptrace (PT_READ_D, pid, &((long *)(long)addr)[x], 0);
+#else
 		lr = ptrace (PTRACE_PEEKDATA, pid, &((long *)(long)addr)[x], 0);
+#endif
 		lr = ((lr&(-1L<<last))|(((long *)buf)[x]&(~(-1L<<last))));
+#if defined(__OpenBSD__)
+		if (ptrace (PT_WRITE_I, pid, (void*)((long)addr+(x*sizeof(void*))), (void*)lr))
+#else
 		if (ptrace (PTRACE_POKETEXT, pid, (void*)((long)addr+(x*sizeof(void*))), (void*)lr))
+#endif
 			goto err;
 	}
 	return sz;
