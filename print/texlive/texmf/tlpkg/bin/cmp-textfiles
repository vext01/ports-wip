#!/usr/bin/env perl
# $Id: cmp-textfiles 24757 2011-12-05 00:21:47Z karl $
# Public domain.  Originally written 2008, Karl Berry.
# Compare two files considering CR, LF, and CRLF as equivalent. ,
# and ignoring %% lines (see below).
# 
# Used in place and tlpkg-ctan-check in TeX Live.

exit (&main ());

sub main {
  if (@ARGV != 2) {
    warn <<END_USAGE;
Usage: $0 FILE1 FILE2.
Compare as text files, ignoring line endings.
Exit status is zero if the same, 1 if different, something else if trouble.
END_USAGE
    exit $ARGV[0] eq "--help" ? 0 : 2;
  }
  
  my $file1 = &read_file ($ARGV[0]);
  my $file2 = &read_file ($ARGV[1]);
  
  return $file1 eq $file2 ? 0 : 1;
}


# Return contents of FNAME as a string, converting all of CR, LF, and
# CRLF to just LF.
# 
# Also, annoyingly, ignore lines consisting only of "%%".  For an
# unknown reason, derived files on CTAN often contain these lines, while
# the same files regenerated by us do not.  CTAN's general policy is not
# to hold derived files, but there are too many exceptions and it is not
# worth the time to continually contact CTAN and authors.
# 
sub read_file {
  my ($fname) = @_;
  my $ret = "";
  
  local *FILE;
  open (FILE, $fname) || die "open($fname) failed: $!";
  while (<FILE>) {
    s/\r\n?/\n/g;
    next if /^\s*%%\s*$/; # ignore %% lines, see above.
    #warn "line is |$_|";
    $ret .= $_;
  }
  close (FILE) || warn "close($fname) failed: $!";

  # if the file did not have a trailing newline, add one for purposes of
  # comparison, since it can slip in if we edit it, etc.
  $ret .= "\n" if substr ($ret, -1) ne "\n";
  
  return $ret;
}
