%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96 Copyright 2005 Radical Eye Software
%%Title: psv_about.dvi
%%CreationDate: Tue Jul  1 16:19:28 2008
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 567 392
%%DocumentFonts: QuasiSwiss-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -tunknown psv_about.dvi
%DVIPSParameters: dpi=9000, comments removed
%DVIPSSource:  TeX output 2008.07.01:1619
%%BeginProcSet: tex.pro 0 0
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: qhv.enc 0 0
/encqhv[
/alpha
/Delta
/beta
/delta
/pi
/Pi
/Sigma
/mu
/ellipsis
/f_k
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/space
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Euro
/Aogonek
/Cacute
/greater
/greaterequal
/approxequal
/Eogonek
/Iogonek
/less
/lessequal
/Lslash
/Nacute
/asciitilde
/asciicircum
/ell
/dagger
/daggerdbl
/Sacute
/Scaron
/Scommaaccent
/degree
/Tcommaaccent
/ogonek
/Uogonek
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/.notdef
/braceleft
/braceright
/section
/.notdef
/aogonek
/cacute
/registered
/copyright
/divide
/eogonek
/iogonek
/minus
/multiply
/lslash
/nacute
/plusminus
/infinity
/guillemotleft
/guillemotright
/paragraph
/sacute
/scaron
/scommaaccent
/bullet
/tcommaaccent
/.notdef
/uogonek
/ydieresis
/zacute
/zcaron
/zdotaccent
/.notdef
/periodcentered
/quotedbl
/quotesingle
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/backslash
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/currency
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/bar
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 userdict begin /ori_setcmykcolor where {pop} {/ori_setcmykcolor /setcmykcolor
load def} ifelse /ori_setrgbcolor where {pop} {/ori_setrgbcolor /setrgbcolor
load def} ifelse /ori_setgray where {pop} {/ori_setgray /setgray load
def} ifelse /ori_colorimage where {pop} {/ori_colorimage /colorimage
load def} ifelse /ori_image where {pop} {/ori_image /image load def}
ifelse /ori_imagemask where {pop} {/ori_imagemask /imagemask load def}
ifelse /ori_fill where {pop} {/ori_fill /fill load def} ifelse /ori_eofill
where {pop} {/ori_eofill /eofill load def} ifelse /ori_stroke where
{pop} {/ori_stroke /stroke load def} ifelse /ori_show where {pop} {/ori_show
/show load def} ifelse /ori_grestore where {pop} {/ori_grestore /grestore
load def} ifelse /ori_gsave where {pop} {/ori_gsave /gsave load def}
ifelse /hax_setcmykcolor /ori_setcmykcolor load def /maybe_black {
4 copy 1 sub abs epsilon le exch 0 sub abs epsilon le and exch 0 sub
abs epsilon le and exch 0 sub abs epsilon le and /if_delblack exch
def } def /my_fill {userdict begin if_delblack {newpath} {ori_fill}
ifelse end} def /my_eofill {userdict begin if_delblack {newpath} {ori_eofill}
ifelse end} def /my_stroke {userdict begin if_delblack {newpath} {ori_stroke}
ifelse end} def /my_show {userdict begin if_delblack {false charpath
currentpoint newpath moveto} {ori_show} ifelse end} def /my_gsave {c_
m_ y_ k_ ori_setcmykcolor ori_gsave c_ m_ y_ k_ setcmykcolor} def /my_grestore
{ori_grestore currentcmykcolor setcmykcolor} def /eofill {userdict
begin my_eofill end} def /fill {userdict begin my_fill end} def /stroke
{userdict begin my_stroke end} def /show {userdict begin my_show end}
def /gsave {userdict begin my_gsave end} def /grestore {userdict begin
my_grestore end} def /setcmykcolor {userdict begin /k_ exch def /y_
exch def /m_ exch def /c_ exch def c_ m_ y_ k_ hax_setcmykcolor end}
def /setgray {ori_setgray currentcmykcolor setcmykcolor} def /setrgbcolor
{ori_setrgbcolor currentcmykcolor setcmykcolor} def /hax_image { dup
type cvlit /dicttype eq { /ImageDict exch def currentcolorspace dup
length 1 eq ImageDict /ImageType get 1 eq and {0 get dup /DeviceRGB
eq {/ncomp 3 def} if dup /DeviceGray eq {/ncomp 1 def} if /DeviceCMYK
eq {/ncomp 4 def} if ImageDict /BitsPerComponent get 8 ne ncomp 1 ne
and {/ncomp 0 def} if } {pop /ncomp 0 def} ifelse } { false 1 makeimagedict
} ifelse ncomp 0 eq {ImageDict ori_image} {hax_image_} ifelse } def
/hax_colorimage { makeimagedict hax_image_ } def /makeimagedict { dup
/ncomp exch def dup 4 eq {/DeviceCMYK setcolorspace} if dup 3 eq {/DeviceRGB
setcolorspace} if 1 eq {/DeviceGray setcolorspace} if /ImageDict 7
dict def ImageDict begin {/MultipleDataSources true def ncomp array
astore} if /DataSource exch def /ImageMatrix exch def /BitsPerComponent
exch def /Height exch def /Width exch def /Decode [ncomp {0 1} repeat]
def /ImageType 1 def end } def /data_str 65532 string def /data_str_
8192 string def /merge_multi4 { ImageDict /DataSource get aload pop
dup type cvlit /filetype eq { /fdatsrck exch def /fdatsrcy exch def
/fdatsrcm exch def /fdatsrcc exch def /datasrck {fdatsrck data_str_
readstring pop} def /datasrcy {fdatsrcy data_str_ readstring pop} def
/datasrcm {fdatsrcm data_str_ readstring pop} def /datasrcc {fdatsrcc
data_str_ readstring pop} def } { /datasrck exch def /datasrcy exch
def /datasrcm exch def /datasrcc exch def } ifelse ImageDict /DataSource
{ data_str 0 datasrcc {3 copy put pop 4 add} forall pop 1 datasrcm
{3 copy put pop 4 add} forall pop 2 datasrcy {3 copy put pop 4 add}
forall pop 3 datasrck {3 copy put pop 4 add} forall 3 sub 0 exch getinterval
} put } def /merge_multi3 { ImageDict /DataSource get aload pop dup
type cvlit /filetype eq { /fdatsrcb exch def /fdatsrcg exch def /fdatsrcr
exch def /datasrcb {fdatsrcb data_str_ readstring pop} def /datasrcg
{fdatsrcg data_str_ readstring pop} def /datasrcr {fdatsrcr data_str_
readstring pop} def } { /datasrcb exch def /datasrcg exch def /datasrcr
exch def } ifelse ImageDict /DataSource { data_str 0 datasrcr {3 copy
put pop 3 add} forall pop 1 datasrcg {3 copy put pop 3 add} forall
pop 2 datasrcb {3 copy put pop 3 add} forall 2 sub 0 exch getinterval
} put } def /i_Str 3 string def /O_Str 4 string def /UCR {0.5 mul}
def /BG {0.7 mul} def /min {1 index 1 index le {pop} {exch pop} ifelse}
def /max {1 index 1 index ge {pop} {exch pop} ifelse} def /RGBtoCMYK
{dup 0 get R_scale mul R_shift add /c_i exch def dup 1 get G_scale
mul G_shift add /m_i exch def 2 get B_scale mul B_shift add /y_i exch
def /k_i c_i m_i y_i min min def O_Str dup 0 255 0 c_i k_i UCR sub
cvi max min put dup 1 255 0 m_i k_i UCR sub cvi max min put dup 2 255
0 y_i k_i UCR sub cvi max min put dup 3 255 0 k_i BG cvi max min put
} def /RGBtoCMYKfilter { ImageDict /Decode get aload pop 2 copy sub
/B_scale exch def pop 255 mul 255 exch sub /B_shift exch def 2 copy
sub /G_scale exch def pop 255 mul 255 exch sub /G_shift exch def 2
copy sub /R_scale exch def pop 255 mul 255 exch sub /R_shift exch def
/rtc_file ImageDict /DataSource get def ImageDict /DataSource {rtc_file
i_Str readstring {RGBtoCMYK} if} 0 () /SubFileDecode filter put /DeviceCMYK
setcolorspace /ncomp 4 def ImageDict /Decode [0 1 0 1 0 1 0 1] put
} def /sep_str 8192 string def /SEP_CMYK { 0 hax_sep 4 3 index length
1 sub { 2 index exch get 3 copy put pop 1 add } for dup 0 ne {0 exch
getinterval}{pop pop ()} ifelse } def /SEPfilters { ncomp 4 eq { useDeviceN
{ ImageDict begin /Decode [ Decode aload pop 4 {exch 8 2 roll} repeat
] def end [ /DeviceN [/XCyan /XMagenta /XYellow /XBlack ] /DeviceGray
hax_sep 0 eq {{pop pop pop}} if hax_sep 1 eq {{pop pop exch pop}} if
hax_sep 2 eq {{pop 3 1 roll pop pop}} if hax_sep 3 eq {{4 1 roll pop
pop pop}} if hax_sep 3 gt {{pop pop pop}} if ] setcolorspace } { hax_sep
3 le { /sepproc /SEP_CMYK load def ImageDict begin /Decode [ Decode
hax_sep 2 mul 1 add get Decode hax_sep 2 mul get ] def end } { /sepproc
{dup length 4 idiv 0 exch getinterval} def } ifelse /sep_file ImageDict
/DataSource get def ImageDict /DataSource {sep_file sep_str readstring
pop sepproc} 0 () /SubFileDecode filter put /DeviceGray setcolorspace
} ifelse } {hax_sep 3 ne {ImageDict /Decode [ 1 1 ] put} if } ifelse
hax_sep 4 eq {ImageDict /Decode [ 1 1 ] put} if hax_sep 5 eq {ImageDict
/Decode [ 0 0 ] put} if } def /change_str 12288 string def /CHANGEfilter
{ /change_file ImageDict /DataSource get def ImageDict /DataSource
{ change_file change_str readstring pop 0 ncomp 2 index length ncomp
sub { 1 index exch 2 copy ncomp getinterval changebits putinterval
} for } 0 () /SubFileDecode filter put } def /hax_image_ { ImageDict
/MultipleDataSources known { ImageDict /MultipleDataSources get { ImageDict
/MultipleDataSources false put ImageDict /DataSource get length dup
4 eq {merge_multi4} if dup 3 eq {merge_multi3} if 1 eq {ImageDict begin
/DataSource DataSource aload pop def end} if } if } if ImageDict begin
/DataSource dup load Width BitsPerComponent mul 7 add 8 idiv Height
ncomp mul mul () /SubFileDecode filter def end to_change_bitmap {CHANGEfilter}
if ncomp 3 eq to_convert_bitmap and {RGBtoCMYKfilter} if ncomp 3 ne
to_sep_bitmap and {SEPfilters} if ImageDict ori_image } def /zero_data_str
65532 string def /hax_imagemask { if_delblack { dup type cvlit /dicttype
eq { /ImageDict exch def } { /ImageDict 7 dict def ImageDict begin
/DataSource exch def /ImageMatrix exch def /Decode exch {[1 0]} {[0
1]} ifelse def /Height exch def /Width exch def /BitsPerComponent 1
def /ImageType 1 def end } ifelse ImageDict begin /DataSource load
Width 7 add 8 idiv Height mul () /SubFileDecode filter end /mask_file
exch def ImageDict /DataSource { zero_data_str 0 mask_file data_str
readstring pop length getinterval } 0 () /SubFileDecode filter put
ImageDict /Decode [1 0] put ImageDict ori_imagemask } {ori_imagemask}
ifelse } def /truebp {0 matrix defaultmatrix matrix currentmatrix matrix
invertmatrix matrix concatmatrix dtransform dup mul exch dup mul add
sqrt} def /truein {72 mul truebp} def /truept {72.27 div truein} def
/truesp {65536 div truept} def /truedd {1238 mul 1157 div truept} def
/truecc {12 mul truedd} def /truemm {25.4 div truein} def /truecm {10
mul truemm} def /epsilon 0.005 def /if_delblack false def /to_change_bitmap
false def /to_convert_bitmap false def /to_sep_bitmap false def currentcmykcolor
setcmykcolor end

 userdict begin /useDeviceN true def end

 userdict begin /scaledpoint {65536 div 72.27 div 72 mul} def /setsuperblack
{1 1 1 1 setcmykcolor} def /cropdist 932339 scaledpoint def /cropsize
932339 scaledpoint def /cropthick 9323 scaledpoint def /croplin {gsave
cropthick setlinewidth 0 setlinecap setsuperblack newpath cropdist
0.5 cropsize mul add dup 0.3 cropsize mul 0 360 arc closepath stroke
newpath cropdist 0.5 cropsize mul add cropdist moveto 0 cropsize rlineto
stroke newpath cropdist cropdist 0.5 cropsize mul add moveto cropsize
0 rlineto stroke newpath 0 cropdist moveto 0 cropsize rlineto stroke
newpath cropdist 0 moveto cropsize 0 rlineto stroke grestore} def /cropmark
{gsave cropthick setlinewidth 0 setlinecap setsuperblack newpath 0
0 0.3 cropsize mul 0 360 arc closepath stroke newpath -0.5 cropsize
mul 0 moveto cropsize 0 rlineto stroke newpath 0 -0.5 cropsize mul
moveto 0 cropsize rlineto stroke grestore} def /lin {gsave cropthick
setlinewidth 0 setlinecap setsuperblack newpath cropdist 0 moveto cropsize
0 rlineto stroke grestore} def end

 userdict begin /scaledpoint {65536 div 72.27 div 72 mul} def /setcyan
{1 0 0 0 setcmykcolor} def /setmagenta {0 1 0 0 setcmykcolor} def /setyellow
{0 0 1 0 setcmykcolor} def /setblack {0 0 0 1 setcmykcolor} def /setsuperblack
{1 1 1 1 setcmykcolor} def /cmyksize 372935 scaledpoint def /cmykthick
9323 scaledpoint def /cmykhalf cmyksize 0.5 mul def /cmykquarter cmyksize
0.25 mul def /cmykcropmark {gsave cmykthick setlinewidth 0 setlinecap
newpath setsuperblack cmykquarter neg 0 moveto cmykhalf 0 rlineto stroke
setsuperblack 0 cmykquarter neg moveto 0 cmykhalf rlineto stroke setblack
cmyksize neg cmykhalf moveto cmykhalf neg 0 rlineto stroke setcyan
0 cmykhalf moveto cmyksize neg 0 rlineto stroke setmagenta 0 cmykhalf
moveto cmyksize 0 rlineto stroke setyellow cmyksize cmykhalf moveto
cmykhalf 0 rlineto stroke setcyan cmyksize neg cmykhalf neg moveto
cmykhalf neg 0 rlineto stroke setyellow 0 cmykhalf neg moveto cmyksize
neg 0 rlineto stroke setblack 0 cmykhalf neg moveto cmyksize 0 rlineto
stroke setmagenta cmyksize cmykhalf neg moveto cmykhalf 0 rlineto stroke
setblack cmykhalf neg cmyksize neg moveto 0 cmykhalf neg rlineto stroke
setyellow cmykhalf neg 0 moveto 0 cmyksize neg rlineto stroke setcyan
cmykhalf neg 0 moveto 0 cmyksize rlineto stroke setmagenta cmykhalf
neg cmyksize moveto 0 cmykhalf rlineto stroke setcyan cmykhalf cmyksize
neg moveto 0 cmykhalf neg rlineto stroke setblack cmykhalf 0 moveto
0 cmyksize neg rlineto stroke setmagenta cmykhalf 0 moveto 0 cmyksize
rlineto stroke setyellow cmykhalf cmyksize moveto 0 cmykhalf rlineto
stroke grestore} def end
 
@fedspecial end
%%BeginFont: QuasiSwiss-Regular
%!PS-AdobeFont-1.0: QuasiSwiss-Regular 1.07
%%CreationDate: 12.01.2002
% Generated by MetaPost
% QX extension by JNS Team (see www.GUST.org.pl).
% ADL: 729 216 55
%%EndComments
FontDirectory/QuasiSwiss-Regular known{/QuasiSwiss-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(1.07)readonly def
/Notice(QX extension by JNS Team (see www.GUST.org.pl).)readonly def
/FullName(QuasiSwiss-Regular)readonly def
/FamilyName(QuasiSwiss)readonly def
/Weight(Regular)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -127 def
/UnderlineThickness 50 def
end readonly def
/FontName /QuasiSwiss-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-174 -285 1000 959}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E5D071F743ACDAD8F4F97A172F977C3F97E343
F4A3478877F53C5499AB64462D95993B13D9EB1E1A87443B4DAD1A424334C7C3
93173E4450DA2568A0AA892EB87B078CC6BDBD48C5E71AD224DD23027CFCC6FA
BB2E3882A14C0F81CB92941A12D4CEF33D758ABC67EEA7452F0DD040612A5F91
A8D8F9866DF37EA9CEC4814906E05F8C143BB09E42B8A1688B764C00AFA45552
5B4CEAC2AB9BA06075FAD345C12F4CFC2FF0DA615C8A70FFDAFF248BC9227175
7AD37A2C3A05FBB1397D2D628B47356F58A71E702F3D716C0A6512ADEE8E89ED
0F29D27B15CD4306D7251D63B2F3A3B5AAFF55ABAE0C1DFA37661A21901AE7DE
B920CCD9BEB91A16D9D568D7DC6376C15CD364FE2A7C9DB648C631D5724D9FE8
ECBB8011CD6F52BAB95C31A693E9C6307CE602E1E9B116FE182AA9D0218DA75F
255BCAEBAA3E8468B33C6AE1B7BD61A39CA97413A76A4A2E35415C9F1CB7DDCA
DCE96CB612572BEA8C3D6CDB9F07B6A46EEE24CC417E10395C3237955CF72507
B964AB83D8F330AC17FAA8048A02A45866C6C06A96A49BB4F54CEA3EEDD26E0F
D545B3833FAE346DB0966D1F1396C81A21F533B9CF4CCE756EE50C6CB606FAF4
C43CBA4F43920EC2C963C3E41CF192346273D4C72BA71A8083BD014F9AD09552
AF4BF9B85CF949C754D36757E004FF3F5C9E4C5A6C689B024CE59B977FC47974
D0A731D84DE0F8334C876E74256A3F9F1958140ED4F7C537C04BF4B9F56EA434
B58C5000DACFEF4CF42647EE674510EF2CE12F4012B73A9B4DFB3A8B2373232C
E5CA1AA372C6C92C815DC4D1641A9A92DF9A094EB9F801823AFFED8180480699
E77641283457413BB6AA20E5946B0BB383C416678EDCAD2D3C9858A1A64A8A1C
79842AA9E78DB2A52DFEB85CB1831774222E92C6A3B13DFEFAC48E5414911439
D351CF9EB086BC1CBF53DEEF1FE81188A169292DBDA6C5441F953DA19A6AB424
DA29964EFD2FE8D0E5EE627772619ED54F5CA3A14911F452C33ABE95D7230E14
439D973158CC58ECB307F0D372DDCB8CAFF30FE0843CB33249EDBE568910A40F
1A19008FCC92C461BF5463C5A1C471B6B22586FDC33C0B57B8121A58AB758A95
CF9695F43FA3575F7FAF092943B9666224238D328C48F6D8A346D64697546C06
A9125A3B90CE131DBCDBAD35A6388CFBC335D2BE90B5C581D1E84F9E76CF920B
7BEC2E3679ECCA31C5DD602964AF4533BA8AD4CB58532AF7191B77CA3737E477
4F66DF77395FB0F96D19115C60E652EF743F21C40B43782C5D4E00A09F155B0E
B96CFE9312BA2A0CC2777CE3821A3028E09B840E807E6F6740A7B21EB035C42C
067B0934BE534D76E035D858CE3BF07CB1E30764FAFF860CA83C4658577EC9AC
F7E71468888D5C6807B4D7F645E55D8BC8B24E3652596FAD4BB9E1AEE8FEDC9E
A5F7B931673B3FFABDD2146CE8A13E32380F1F0526611190E892D8A6FD185CFA
65DF3DB858BCF75E95321A7131547E0C82D586DBA09EF291CC2E8D8CB438052A
C2992420B6F580E30C865DC98E53B30FC4E51D0C7138D32D57A4E8D3A2AB2BE8
86D9D9022750E9D46D72135AC23A90B50712C0A17D7C03E1B8B8B2F95468CD1E
C3FEEC03870155AE380DEC3842F59CC7D52396D3FDA6AB2FFB67061A23953331
DF4BE8804458E1BC7D2172AFE837B7F041CBBDC5EACF25EEE5F4B02C0B505EE6
258A20D9E32E174288D9295618DFB99CA7E44B6EFF6BA0F2F5D28683C25BC570
15FADC64B543BFCC1524D09BD30E36B339866B13AC10BBFEADFC6D39A5B942EF
C9431F72C3B8FDD9F568AF9875BF047EEB6D0BEE5087694C55852F241EF6F397
24098ACB22EEA72138CE45B8F982E1A068E9C61EA876F4FEA72D9EC46EDBDF4F
C7DE2392905875FC28D07872F48FED6ECA640B08B8D586177DB014AB4D745196
AAF73F063E19565F1D434F1B0B6E1EE0AD2510D6B21D5E44574DA49A861E14FB
8153C749EF0DE6EC83878CE9C39699E9EB129DEB430557CC188BD4B33DF5177C
D3C15B71A5F1AD15C37D3EB3C5988F62C7650922F21520BC937BEED880699EC0
893EEEAE8EF961E3CDB118837785D4C45BDB6321EA9F687628C6A20A7385CFA7
C60DBB1875E59CD940B469AFBC921EDB4F97F8D526EB04914F97FBB51A5EE854
0731E514802AB4764D876CA8ABD8B00E1A916BF519D9CBFD8F80DC6E930A018F
967B999ED1F74082531B743058E2AC36E2DCF5B92AC4336C801C993E7AB10201
69E66140ED1D26630B3EECDF552294F3AEAF6C9E9E997BDAE4EF14F9E60E4875
17C8ECCA81ED1DCF653026358C95735248E06086D041BFFB9514E5B8248E84F4
647D674AEEC41A3E496FDEC2C0A1F90C1F4FF62C9DEF4189B84A339700CD6E74
F3BF89884DF1DBD216D1F0D417A96E86F969D73892D142F1F8795AA0E5472451
4A96DCFC689A963DDFB35C8A0EECF092834CE115EBFF2995FCC1C424B7A487A4
8EA5B567B07AA8D634C702038C70BE76D6D8075439786166B52DC7B2F9986B12
970D0A930DD5C1ACAFFD41A9EE2157586990AEC0D5C3C68A43316470CE9FB8C5
36B3DBE12752652F55A217D4897A2610171178618ADFFCF55AEA0E7CBEA3CA49
CE5A53B73A1FA96E4895DC65CF0A519FB5A109CA9D14EB30F6F4C1B85C7C52B7
38C87A9DACF56D583486E8DD0357E35E1805174931A799EAA496770AD10820A2
51ED7BA1AFC4C0016C663FC5BD8C4F0B6AB3CB42145B7D11D07BFE56FD1D6ECD
3C782B934B18C7E3704CDAD37EFD1C45B0472BA247C79BBBDB66CE1C1A441383
D6329EB999707A229E2E3A6DCCF9C3C6511065173609630B8F967D8DDA377CE6
736A5C39A6E22F1B5117C49C6AC5B8EBC8C27117B48C7EF4D09DCA5CCDA000EA
7EACBDB836A8F7E7C40116907887D292FA2338E978F80268BD269E4CA2A78E19
2E9D8B601DB8C3A3A57DA502905FA897BB4B1B8853AC015252171C713B12582F
6D29ADDB80A225B38E611B76777B2EF6EC79522E8C2A743A530180BDB4D9CF4B
F25C74D22A61BA69857F80B88995F6F36A36F8BEDD6767403F244060F6227466
EF360755DFBF795B50D4CEE445EBC7F8251ECD7BB67468D0B7F04516FFE5E27E
777DAED707339191E22C609DD2720E8BB3A13941A65F73AED95051BD333C988C
2585BBD1019B4562A5EDC245455943A3DFE5422C5E45E5D0CD32FC75B781EF29
8DBA6CB1758D22EE8A7680B01DAC1009FD90460372E170BB98B788972C8F3727
7FC53686C62E535AE8846FE4D215EACFCA31EF7C8024B69909D596AB101FCDF3
D861AB13943E2688F91FE5C975AE766B4CA8DE3C3AD0B07BF20CAE78A2CAE6E0
FC453B90FEA4A634ED3B57657BE4BADBA11C521BDF32BD695F1A4F06D0D9C011
6BBA79ED097430BE3DB02DB4584FEF6233377076ABF616AE15C8F2FD7DA721CE
97E1FD9A0EFE937656C78D3EEF3837812E90CDE56A783BD5E0935B9A6068E6C8
C17EF1545EEE457EA1679F2B7C58BE9909CBFCD273EF5617183CFA647579B2F6
413BA4DEB76CE1B7C8CFD866C961BF468F25AFF9376ACCAEF050EC35C66E0846
EF04E8EFF318AFBA650A3D42317C507CDB27EA8A1472D4E8D917E62C98DFB04F
FA48EE3B46B2150DE67F616FBA22F823AFAC1A9A796FCC9D816852D5C351BF14
56B1AF4BA063CE6B333D2FE7174BA0E2792D227EDD82ABDD138A2812AC5E2FF4
164D9AF89DBBE3B49616C51E8265379ED8DE9A5CBC721C8F989103E4F6F8A25A
31E864651CDCFEE7A97C607CA2BD6EDA120F1EABAF82C0383256CB36700DD929
7237758B75F5ECCDF503383715F45158FEBE4C9CF4C2DD17352573C90177484F
7E742B00B7C92F1B9292C0E353FB1785CF9CB67C88AF752C2A0DAB50960D67CE
7B6B5CCD4A00A4866D2F89FB374260E9C0DB773FAAFBF6CC8A06C726F257E997
2CEB41F0D2509AC371EBFB43D84299D336736B15B05591122AE51D1DC1F9D073
E5CD3EFE666EFBA5B908D599DBE8BF9DF8C869274F0071E0DE691DF9ECBDA9EF
89EA374D4220DA9D43B74459BD85FDA5ECA024BFD70FD472BFACF8DDC37F35F2
9CF3FAEECABD5306CE4B824F02383FA663231350953FACECFD82FBD821919E35
42B33690D4AB41F53EFF9021D9D4C491F26BE8F54C61165CAD77953F451A4DCF
54441D2E2D5B38F8D4FF1997C652460BDDC872F75A1B652F87AF1E35CE918A42
0AB2971AF800C6370ED44F61E2E7C76E185C68F2639AB7AC8B0A65849E12A64D
B779813079E361ECCCAECFE637A6D013CC924647328C0A87C90F9973859BB9AB
E6F35F9313B2DC48966D23638B056F85792F8A82BE4377D74D6A514BD8BFB0D9
3439074CA0D2EEB74486707DC381F9F7E652409B57CC2F8E3ACEBBF5D67DFCCF
B21BE0F4EB852EBC821046FEB892140AB4E0A69A3A4EDA731772094CC2E98F8A
EADA8E29FF69C52006358FF414CEE22878912B6D9C211717CEB233C5E8E129DC
B2FF190C521826F962ED9AF186977BF25D98599B9FBFF3D28EE90CC398694300
B125E9FCDC8CDB3E8629F7EB5BB7EA4DEA72BBABDDA3E7C8884917AF2EC6E7A2
F1923A3939A2DDC00040CD674226F91F6359D99A554AF98C4428587BFFA94E27
DF9E2F855D1E1336D31C234467A64A0B46F216FA8140D43669F1DEE0959C0188
CADA78EB30EA5D781ADDF0880B1CD099FC9A8F3A054CC38634A78BF0B05AD946
C0989F5E89D560C1A1D2C45692C7F8CE9582FA66EB304B211D49A5395D14005D
847CD584C276DA981BCA15E3D2BBBE8D70C469579C3D281E338A368797E93DD6
5D504F2E85BE54F862DD77DE647D11AC4264ABD7EB458C8C185A95C95DCAD47B
5DF744FAE4C541F7316B651A4F39056E1F07335515E51D9B1B6EA66CA3DB34D5
82F9B3E4388B0BD6D579327DE0BF047566CE98ACE7F8A4CB9C0609774D6088BE
C1EB7ED1FC5B459A6AA035978541E503109132FB020BB1386FB78785104B1B51
5AB24A664EAD15BB9E17B1C2DFDAD70B2908CE0FBDCF08ACA9426BBEEAAD5CFD
4925E34FF852181D1C2ABA71CF4038443267AAF501A133CF7ADFD281430F4320
9DB56E95C1D1353B820CF46EBF499206A33A1F6C724A435B996178A53AD5D9D2
0562309C8864FC6ED851CB0F552D8204919CC43C45F41D2EFEC1C8DA3557E611
F141D580D87FF11A5ACF38ED3D5DA4DD37FB31FFC9EFE4965411F7413DEA25F6
CEDFB70BB310424BE9E4056CAF9906539D06A9892AACCF1E7C972E507E27C978
E3ED06C2CC580967BCF3EB4C9304CFC42B01FB3B663FE51F4A75B27E0CE8B43A
8E22D8374366BDC6C192963A4CB98AA6171313DB9DC511B39105F2F02CB07FC4
61F1F55B1FC7D57896A8E0FA9243F9A8B15474F9801327E0398670C841821BEF
A38DF64AE7A86E2E8406F0133DA80CE6A9C4BA8934FB404337D53C368707B167
12F4434B55B219E653DB4FE3716BE654EC5AA25ECFA62380908D14AA927C52DA
A3A8BCC53B5403ED919FE7E582EE5564C93C758382FDC76B859425438C4057FC
4AB027AA33ADE0768E2A6AFE6E5C86197B4C15A94BC6DC6317052D4760DFBE92
9FECA15365E643E7CACD173F5A11A8D479CAF5F9C5009D41C91364D2F03DB246
7FA612556C5852360E2EEE598EA790F6F9D686EC7239254D6CB8BBCF7A43A7C6
964EEDB9DD506DF8663AB6CB54D094219215024F90EE470C1754AF5B1F349A72
BDA716A464C84C6CE27F713296336E3213B389281B7BF93D8674EB12AAC94C97
D5974EEF817A3B0F0EA74B18AC02C57A82344F676958CB14F60D014C2363C3A0
DAD1EAF20C74CA65571E9141F4137292F3F66001816BE879DD407A1B5F10F857
6515512C74A5A4B61F570247A2929EA1CA915D79203F4CC9757E067CBC24071B
59D5C067FC70DE0B05B1159897E6B962B946D56AF4DB0E0BFA4FDFD2600F36C6
6F59237284DAA29EA131D482990C36EE577CB6EC387F91AE4713436B05B4FAA9
2F54062EEDF901A4FD374B35A7B0E2018183509565A8CAC9EDCF0056E38D6C86
C480EEEE1DB28D45C191A7B8E1837E3DA29A3A4117DD1D167704A55F7F61BBE1
0D1106070A6F0C10C99D5582084520A360CD68C62D63F564DEB0A5A43CEE22CA
9F74E05B3CD1074503AFBBC27EBB51D6AF3DD4E33E2BB1EE72DE883E5DF500C7
1F8640F134D7C6550DC03AA271C4D4C1B7AC1890AACD29ED0ADD11F687AA6A1F
A145DBB65A3283D52E21FB229C222646AE26DE2ABCABAE3A02BC101ED1FBF565
4332FE1DD559FEE3EE48F7DE5C87EDCD25AA567933A1035BD4E5AC41B8FFEC3D
408382BAC17727677BC9DE1E6B6316EB0B27715D7F3FB1542E4898BBD96830A1
17E28430A204DA5DF4A1E25783E9C7F9F8F1210C9BC025E0CFDDBE02AC126720
D3D7D0F43A7DA214E1E3C703A99AE5B79F1CDBC5D8059D795BFAA137BC18225E
734A23D785079F6741C0E5CD8DD4FC46BDA02B22F8C85EE58BCD3A84BF1AECEF
F2365586FE92A63482FB1DF741BCBCC0DF5424750CEA579D03675F60F3D0C3E3
B5F021EF5377650E879CFCA3E342265AA8A69025B122744FC55D961F392F7157
EAD8DCAF0BB6262EB73196552F0155819D306870005668650175985DEF6773FF
6D8D050FC83ED66E5A22B56F79FEF730DD2360A75C7691B72AD442BD2A88328C
E9540C4588B612B4A1D428273310DBAD205CA3EB1CD9E1252CD6D7C126BCF9E6
F727CFC1EE3A84CDEDC21012099E8515DE0D0483A8487E3C64FBE07975CA1019
3D83364239F1F59372DCC9947F32A030112A15A681DF891DF490B9AD448695E9
8FE0D20C9687358465519CDD53AB422538E9D1CA63CF0C5095F6798C062F0430
53B7D441675C32A956E9D383343CB8D59DD8B58BC29AB4F9F0BEB9F3189F41F9
FE05CF14F606B403F1E87CC67D20E51721CD8F141B118B0D0451FA5C0CF71254
8B9D164B87B1EA7FBFE5F4636FC8CC7D99C4240559220CDCB7F94E6BA6381BFE
705ABF5E9B9FF1CFB5A1EC59C1EE22C779037835F04CEEB8E6D424E7E5F45E1B
B35E06612F9E69A3B8E2E4C005A38969935BE76BDCEBA951B61B4C33A576A419
0133420407851FB04E1E5747BD78F49E68F1F38DC5A1CFCE20C7B9AB708C0CF6
8EB0D4D1A250610F5510B2279ECF72E1EC79A059E0EDCFCDD753C5E11137C66F
3708A768EC3EF2D420F2BA3ED3D0E329F13EDF85F74E343454CCE4B9FE136C27
D89486C546A7EF8540D94827AF3EA1B20150CD44991EC954B803C19DD409423D
84DFA9DD1D4CE39A4F5252DF58B24D96BAEAD5E746ED83F259BC121E98AE511A
E8B1110F207AE3F5D3A5062ADC5E9A9FFD534CD2D4A49D0B6C781867EC9CE37E
9BFA532307E649B55DACCD4D825EC52303678EAA8D76427BEE386E1ECEB15C27
B5B1DF6959C779DCEB897B16A52472748DD1C09730B8EE14AE8BD323700B08CE
E62BC7B07D6138D21B9C36C03CC4D176110217957C036A24553D84F5E52E063B
ED3E498F833DA65A908E1E9E3FF3FA05D502526EAD49B60063FDCE90E2507080
CD303FB677696BFD2F98540C6F7EE37D911D04CB503E41BBFEF2F01946619777
0EAE5274C223DF459A714DA462A121B979EBD844943D7B2A86B7EBE267D98AB1
360DCA2CBB56B322A028D05FB45FB76C05AEF5C836B07E96779EF0B80D002600
C16CC2CF3619F053193274DE717BB73FB3C7CFAE7B2C1B97F807E5AB84C0E637
8D4022A99E04D65149FBC85EA632F544082BBDC9B77C55B4D4E68066D9BF3D50
225DAA397A7BB4C82A4F1EA6C7682F1CA89CECD655F08D120BD216209890529F
BB3D24651664E84B70EDA3987B118F9C0019B318CD3A83CB0A1E8891BE5F6A0F
221697722398093CBD222B559CF79371B1A4373E71607E9BB1D7893DF52D57BD
6C1A6B744024CFC65AAF320081867B127AC16AC1E93981A46D9C5A80A51C7A5F
8A0E38CB653F2F1B3EF5109D65A6C9D4B82A5F53C3EF91EEB3C51C3B43EF10E7
021CBE099ECF330F033AC321D463A27632AC5B49AF8652D3E337FEF91B42E092
0025F331304BBF3C4BB3AF62CA5E1EE5BBA27EEB1C13D43BCC0D8F8C0400CB5F
7CB4982A85E0AE675D2144DBE77CCFFF9E9C6663FD84A9093C5992FF518D80F2
19AB3240985451766FD0A241E0F2C7528A840FE39FB96D98361BD49238F368AE
2182FBB631E375E903ED9EFD0FAA7FB0583016699A3FDC333B26080381352B13
A323C70C0E1F94F3955700C92CB435D3CC0690B1AAE543C7DE699F482833B697
25F53363FA3896798939057C62230972FBD42AEA82D51BF9669126F15AAEB8C9
58779284E86E27A3F7EDF39DCE1847EF238D8CF906C0A64B35026673B01736FA
CC46BF19AB92E7415CC9C82BAB0E6612900D7699E573E26B49D2D6FE8D61D18C
921CF6538D1BB294F9C1EC78CEFA0D1248EF4FDC65105BF8CC8675D67ABA995B
1EACA97992016AE68E31049847E75EB38309F79B4E98495C38C46A383A2774F2
83EC58C1CAD7D198E97E824D4D37593459264EC29BB1F7C9D2774B244FBBC13E
C5B3101E12DE774C78A0BAF5850C2E53334AFBF076DA9AE832E0D1F9F1E4A013
5C64145D44C0D9BDB91E3921943F78C79FFE0303AF1B0861C65D9EE861F61D00
903019CE0362D355933650EC8C92E3CD1667F35F9666BF2C13F7ECB7224FC5E7
E4377C6E1F717DD65F6A274994CC473AA60A32F061B87B6C7379BBF8DF0C3F7F
289A4F90A083D0B93CE6FEB1DB4D034DB520DECB48E83E303A3BDD4A66F984B8
AF61BD0E65A986BCE87AE614447BEF6022536829527A871675F9850715E93B75
A6480A4DA327E16D18B38255968D194E6270D9E61C66D263D2EFA54028A03E51
1BB1F67305D3A25282405EC89DC62C37DB28EBBFF38FB8E3E3EC7F842E7158B6
F27653A4D9D6A7E2A9CF125554BD85A37B1F3D63ECFC9C885D638355D76EA013
056DFFCB3BBC4F26EE89E4F31CCC0872C502A1C8B0CDD52DE4FD7C40DE0224F6
1857D6D1EDF135A35A8E10E17D68A62B3BB61D4A23A2E4D3B9E95EF8F6A52DD0
8E26B38224BC114C5641CDFBB6F9CD18B256B2C43B27E28B9EA54CBF2A115403
A2E98751715251D4CF99D8DB478D5A5FE47828E4D277E12829BC46062E20AEAD
38E593EFE8DB971259D760D7B237396F4CAECF5225E537266DF9E2729F08033A
0EB87FE3614FE749C250054EC8417ADAF656C36CD37915CD4CEBB3F216B9E2A4
F81351DFCB8F5D551B239CB078F707C87462B67509FC8442D4B1A04F16826F1B
260B56E53B9BDEF27BC2D40F8D2E3D08E78B943B79CBA4AE4A777008ED58227D
E9CE0DC9AE2432245A580C41D1E97FCAAF1A9A30EF490AEF0E5AAEEAA17B3941
88BAF4F489B0195430270121D844262D01ACFE1A26E6C7F496EF2D2E5A6DE689
11EAE1F6F100AA4CB2620D7426E840B622D84DC07F548982B9F458DB653ADCF0
AB475E90A19BF4C8D45C0245867A1CB7898997F29583153161234BE32E7E9ADE
EA0B9E5EA173F9D1378BF62DAEE46BE44AC00B724110B2616D47505084C89A04
226A664D1638AFDAFBEF79999598E574F3BF8C8B9E1332AB2B3F1CEF022F842C
EF7E98904F052A50EF8400445BA0112B7313CDBA87FF1A77E4149F59630B7E2C
502FF323730A45E5AC47BD7CF1C622D98AA8F6A94E6B34F8E2714AAEEA37F536
328D804806BFF46BA33ABF4567E5B753069D72B130A06A2B1656B1A2B6604365
0E2AB4D127550D154016A66263E9C69F79D5EA24B56278BC2D0286768655F1D9
D7949DE79B10B867AF262130A97FAFA521BF2B3F7DFD961F8BBE00F766D4AD1A
09F0585BFBA744231CFFAEED26C0DFDB77549B168C0D0C437AE9E5BC18618B9F
3093AE7614981A0678BB2138077169420D84325C8585E1328C2E5D8942C2A174
C3E0F92DC9B92729D9EF97FBB722BA1D047EC4B4C2426B358A2CD7ADD6466D3D
6C69AD01F280B1B40F31D3FF1D608F98FC3D68A4BD9F35AD2BCD99966BC2BDA6
175C40160D7E76F26528BF1E14AF2AE4145E8452F245829380B2CF498091B494
E11CFC4F632B421A4E8F51656FE92C42E085C3F897F0D4218E7F9EB70ECBE2D9
F50EAE0F9FE4B170F7E809030BA42F27F376846EFE92AC50AC95E8DE84CCD8A4
C2991F8F9083DDC054116481A9E9041366FBBF6069437E54E98551416DFF0DBA
692CCE81F748496C01857B58D478B06605A887FA606E34E448E74AF6E42DAA9F
D649C183FD3060D9BDED530B4732B681886F1D23D50270DFC3964532CD68FB79
A9748F609614131EEA9A4B81135AADA27DF822F4A6D8DAD57AE50C103CC3911F
18E2D1620081235885548E422A51C542F5A5A4ED49A41B69AABB77A627CF262E
C2C8BBF80B98C1AC61E33D0814372129C973CFACD5D14CD69A54C820CA759CE9
4E7F41BC51A55BD8848C3BD8951D850068F7215B9DD4CBFC054C5CC65BE70172
B5613523BE4127C18990279551F55B60A644FD6FA1C1E22CEE541D785F94F1F0
86F89CE8530FE68CE3AE5EA070CF5782073114B463E11C4262F3ABBFB15E0E38
DA9634A2583EA6CDED5CE763A9575FD4A04AA9B8C4BD004547C597D6F979F142
66AA59E12EC32B699FA5DB2016470B7D99576F3F1FD41D0CA005CF11B8D45B9B
115E0E7846CFE40DA67E12C652E0E0B18927C48A930218B19A482D4DA1D83ECD
6F51CABAAF6F0F96D52E75A0195527F56D31DE14326B005F40BCCC6580590696
D085991A6C416769DB43E3E7451BDB6FC877CA1E3D73F76BE7F745E3EC30B431
51503A386A76418CEB13106D05DA6A1AC717A55A8798D118DD8B6EFE900D5F2B
4EC6E473D409C3EAA3FAF5773DAF259E6D1B25F2F7F723453226A643182228D1
DA1BDFEE52B0C480AA4A7B45D4504A2197B17892BC11A0EA782DF82089D3D1F1
EB2FBA737CCF61B65397BB77E24110173ED24B619AC64BB3D89479F0DC69C1FC
D5E2A38A107E59E41DEC5D2E2F71460E79CDEFE304A5C96C29805C8AA5C4F683
9C02FC46A4D773DE08F3C5B178142FC8CE1D373C1A0C2C974C08933EEBEB2838
DE41F2A87B54BB834F2AB8F692854DC3E88A01DC5A4EA9642497A859F1902DC7
3B876B9E2E828CE3E5F12B330FBD9AA37FC553F28C748B2BB56FDBD62A2E8459
DCCF8A4A39D358AB51495D1B1BF8D403FE44FDEF1D763F4E1BA316DE28A424DE
20F66A774F9A99ECDC9BADC4C365A0B86391583E378108057698CECCC0C157D6
D2103886D04078D3E305830B3128CBDDBA5BF6ADC9C3FAB63FC92DE5F6A8221E
E23C2EE4880BBBD0AF57E36CCD11432419B925629B9785483AA94A271796A400
06DF9BE38361D1319CF4B7FFAA98722947AEC01A5A206D943E02D651650EA9CD
A067967A43B33ACA30281B32E7829B8B84358C92618C5BED21A826EC20ACE10D
309DE1647AE05E2432640B8C35DA72998D2D5AD9D6E23FDD9FC0F2ED1B94CB58
5DA8EFA897377604B5AF1DCEB070831C12A52AAE64EB825F494989E0C52D5E2D
AB72621BC845C8BA36E6854BC5C32BED06FB6F7DF40AF966849C6BF5E1A76392
13A989F4DD41B5A1D6B86F8B288C440A9CAA523BE8CFB5F90E7AF79BB0014712
2DFE26A8DBCD7DF0E331DAB7BFBA69EC606CA3B05DCC7C25A0F6590E38097E65
4E52CEAFF93AFD65B61E245C8B03ED7F0120F1D1E1462A71D0E5B18357B3FD17
DAA5C09B566830F8146EC371140C306589B8F3964C88A29A162A8BFA18C8DFBC
220B3780C4A0F0CE82192393C682B739EBEF4ADB7DF26A7D24D8B3F065B19A10
C7ECC9B2EBB2EDE5273CFF0752672827D5CA14C7B0E960A6A1CDBC740FC4EBA1
C8499DFB3B1DBCE807F244E4E86205121EDDC4C0B074D86F539E0029A4586F26
1221831DABFB5D491FDD2B8B9E50C52190534AF7728B1F49C218CF405FDE3DDD
D36280FD4C6CFA906A256026C8CADC6E6AFF767A648609335C8E106C736F35AC
E143F116347F64F20D228310DE313B9A1D56DABD0537BE86CC3C9DB7E9E9D235
71481D44682DBDAC07831E41FEC9CC383DB682D1FD454F90F2952B8B9F573A1A
7EA901923B49B1D4116E150B9EF466DB4DFD9F5353005D9A0ECA447415C2284F
20BDCDFB423845F2679089EB374AC2FE503742218BC097F5E477F4EED15A61D0
179CE83D6568692EC2A5F4F20058E804F86BAAABEAAEBA3597DD6640CAA6F371
B101678719DD1E9045FF964A5415BC25F744CE7F3A67AC060BB2524B7E7C6D6E
0829DC573D3655D869009E80375F9979B2F0DD91265B080C02BDE5B844183436
7142AB90E62AB993DCFBD8A29C7244AE01255BFA1A42649E6C3F23B1A03A17B8
0E5E7D17612FD6FE8559CA2CC8BAA35BDA09977C4458410D5E82F5D6E5B0DBBF
C4769146642EB805AD7C007D4236C6EB713DAD1183E2CF0725F3C8A7EA434D13
BCA55457009F34D819880B40D82603118E66AA7945EFE28DE82CDF025FE679BF
3F253A443E624921BCE0F9E760C6F74688BE250E13DE43146AE4E04FA740D839
3F7C2FC501AC97C50C9900FDF973884AC3084F4C85E8C448607546FFF5A4F08F
9057BAA6C4B74C7D8359002429BF0F4812E989F4B33C6CF48D3AABD7138CA380
4EC08649FADB181FA52D5431089059CBA897F61EF31347E7BA6F509D98682ADB
7C7743A5C5033CF5E68E769C806B3AF27BA91782C51130EAB4FCEA21FB89065E
D948C08DA53BA66F5D7FD3FD8E0DF8B55902AAD890D09C06893105BDEDCF40FD
47EFC432B8D774B8A235D811FAA68202F001F4FC7346DB8C01600211D7BCA0FC
1094ED960259613E473E38C0C97980CDA9B30D443EE661E5665AD4A264DB121F
A189DD20B664B3EBAC3E9325B5397B725456BF9DB0CF8E3814786554A7122375
5E838DEC0F43E01FE78AF6EAA720F9777F7E2063BB251D52F76E7867A5D125C3
98E049FC951FF24A24F07D76CD181D63C6E6696124C4BD635C96683A11D43DA0
B933E2FC2293E645DD9AA346B82EF9A7886969D17E57EA7809240D2AF03C9C9A
2A8AFFB94F7EC596D2EA2BF7995852A542E45AA1D4E9D68D5F65A25D3D30F138
1408E896BC3D10C95D1284C3069801F11DFF5E5640742CB1FF5079EC08957D1E
08DDA16B44A3BFDC2D6F88AC87FB32D8FF6677DCD4DFBAD00B2A501B0FD897D1
932E308E4E2368FEAF9502338DFCB56D73324ABE10C9A4B24DC6202687EC7972
3CB4404A0193254C5E6A81D01837917E77AF0994F796041195D4E7126EEAEF09
C24B24F782527F0FE54A353A704C683E6C590BF2358D5C45DE6FFEACFFD76B0C
70A4D37CBCEF265C6E9DA2452E0BAA0519CB647B01793E4A272BE519E790C422
DEE2AA612BBF80F4BD0A762AB1DF5046630B2CEA7EDBE5D4FC4303B003F88D68
139F4B954EDF9C217524018D3A0B21ED5A083F7C67FF41826E90BB23B20FF243
FE740F817EE8001FDBB4C35720C810A5D1FFC55750FE18CA99F845579CB977DF
05B17FFBAEB442F6760B25322A79122111CAEDCDEE49D88E04998CDFE07CC40C
D9A60AEBBA3FAD461AFD02F202077005F65D9459317C140354B6033501B31C56
31D5F720C23EE07241BC87478FA8B45F43FFEE11F0B0316E068D237E40CC3C30
53E1468F984E8786C8A961F57134842D4B45F9745FF357209B8D9C0F7C5D55C1
9989EC6A037029A807988870C008851FA3F09B9A719D6269649C388B54928896
96FDBC9466A8AF2FAEC2758F1FCCFDD5610E049B398514B1996E98DB45FB426B
94E1DBC7B169A0113F4E483377E29068F9E4B2E310D4840342236D7FC3FE77E0
55C39C7117160E28DE473A19B43A4F31EC88565DA039581CFD59BEFFCFAC0B50
51E812A633DAAB5567371FC1CCEA4F73B671F41CCF87C5BB627D82A8156223FE
5D0AF2EA6C21F039173A98507B22BA03312781DBCA5D23BE01699D420E4DA0A9
439EF2411403AF4AEDEFEFA5327BBF67C696C9502E4D52DB71106B9DF7A5AAC2
5C5D4556A541368CCB3A0F9E8C2C0EC8B94A18C58BBB1CB1EBBED2E83BE7DD6C
8EC5B0BC9093F802BF35DBB2CFFCFA318E7759E15FD1573820ED05FF8D1AFE8F
1A9FF2989B623BD3F16D2EE8031BD7326AE12B896F41BEB7A360ABAE6B6A1372
2200F23FE1B328053915C4E46E7FDC3979D12425C5688B4852AFE7988F796E58
CFAA12A2B325E668E7D1F046E3B5BD5BCD013F0E687D2F502F605A29C2E3B377
7B725BEC23126B3EE1500C321BF626807ACF7D86BF240F1445EA0BD90A150DA6
DAE2E4D3143CD80830123653AF04B65FF2275C9604BAE2B9344955167370E038
31426893DBF9E9A6E5065198993A8C7100DDBAFA847EC07121ED344C85DFAE8B
88CF1D7A2EC263EDDE354AA0239C0C1C242B0A8FEF709620C8F1CBD0D8DEEBB8
9AA5607BC159A84882BF9D8781F6DA92C8E30DD77678CDCEBDAA72C394FB6984
3EE21D9BD24B48E474F597644D0144CEFCB46546522A8088454DC39C9C964687
1EC69E35C87D579633CF0052ED33D1B85BC937FE3E6561143211A5BC3DB14C73
9CE6A3597AC61880B999D021B7BAA0612D55BA2F7D6997E83FE912372F3AEF86
FC33D60CB043542046AB01E7FED93620AC6FC337AE85B4EC8FE75FE0FD7FB7F7
9FE1377F544FCC9B89F6FAB7BF52FB25F5480DB09875C5037B6B85299553EF51
8F1C53473F50418A8C6537570114D9FA8121C03449499C4BA76FBEBA75004203
93ED813BE136B1178D5AD71BBEF500AB5148843A0ED7439BAD9D2487360C2809
A867B935B01896BA529030E92FCF07A520CD2931D431275C7B7E11D501B84AD1
6ADA392DE30B34834AEB4DAFA1D9F0B71B33FEB4B8DD2F0B8D82752D43918464
AF150E3D71D153AA53232B2855B26C274F8ABBB57E7698738460841ADD060AA6
28A58A1A8E84F5B24BF848B86F821331F8C5B85F14B87EFF696F4895E043F02B
39F48375A7D7E00D0CC67F3F3E4B6CBEB4470DD44B9B38F3C9DEB836B567D2F4
CB5B7F29AF9380502D591A590AE15DD8F0D976963C3C3206A411EC1EA9A8DBD6
E29DD977F33E7FD099D190601375780BEE618ADAE54BAEF9F1F14566CCBC7521
1C1269471E99EB418CFC906580886BE845F91128384B5C05E8AD8D9EF2AB7E83
516022927DC2C87E8F0B57D4A8C0D33A2B94D12114F6EE02923A6C1787F8710D
C5B0DECB81215F4AA2ED4E09E32A489A3B5088A49E6494C581233D6C80BD4C21
3423A1CC0F104FF59C4D26AFD23B7460E78166CEE05CA5A4AB7AB0AFDC6941DE
E9568C4E32FD07552816D5C7BA682E4A1F429A3F7FD0F065DE96B4921A6FD818
4B78527D905396C52D0B8309B1A83C94E29184356099A24755D395147D04D4AD
6B65712F40579E1B1CFE99C98903A6F3F70E57AAB7FD69549E9E4EFEFEC6DFFB
3F8086075CAFAAFDD807D4363A790BE5F165F5DA56B67D0152A936EC2840F94D
BEC973CECA3C02C3EF41240C6972FEC4E4E8803B5AE5B63976543868FDB5A32C
69B5E4BD5F9DE7884D1B0206C9642BBDF5AEFED613ADFE7A85C75B7243B0D828
08340941218F890CA6507A662A30F1D996EC0C8B8C32EEEFE9BF03AF9D84DD2A
50CFC367F1FE80CF42C8140777F37511DF44363473DE27C09074A51C312F0F09
E42770769139C9C938F2DBED9BFAFBBF4F00A24C6C8CE26DD91D892B21C90AA8
AA3507E2752BD527026D57E5E0A4FB5A646B434AEA92EDCD2063A98911DE7F8C
18FE9E1CA691871FD2DB274D4ABB0F423B9958C73D306B2B7D8AD5478B33635F
E39DBFA7F3D413B1D7CC834FC0098A28D96CED3E348B9E8067B860F8FDA8AB80
007D549C7E18661FA203AE3415AEEACBA8DD159A2F81E24982B7E8A9D3625C4B
301E339CF6D41278B68A120DE1A2B39046CAC95877885279E1879A0F859C3C58
A0D213607AA6990FC70CAF87B149B862B72FFA7E7B56D973AC45C602DFC7ACB5
BA28C06A95C3C4638E909742C2D0D00FE1E2206BA3D78F671E5D2134B764C252
1F9AB5BBFA9DF7455E0CCD23062F4A521BD9F996CFC4CD7108B8FE31DD8D12B9
11BBF015D4182CD9357DF6AAB87E5F975D123798647B686AF551C47D7622F579
83A373F648FF798E667D9D8E417D46D1D0882DEA04C5034C2EC3923287209FF1
F2047B10E6B3EA8A2251F0DA0CFF27912B5D814D41E63D6B82DD2CB315FE8557
2680508A33C4E84D465FE6417A146742969F0FAB4F43F4D9FFD42949D5B5C1C5
3C311C915583440DFD30282E874202B6135693C47155B9ACDE8232F42C435A1A
30FDF8AF8C9245924A9E0AAB01A1AAD8D430053E1D13253708702293AB17E31B
58C15CC48D4BB820228F1B996C71ABA6CA37420F1D10B1E3891B8D33F437B696
23A7CC0D276048FBD35EE0696F29936F2C5992DDA6E89C4549F01A2B0BF9F6DA
95B9850891DF300EB60D28B25FFD03B1046DED11219C437AF3577077B73FF4E7
187DA3366E1CC7B92F9DBEEBD88D7F555EBDE6C3F955120F39A43CE7E0EB1AD2
BBD562840B7F2CD73B2436FF70FC5CFCBB367492401466CDA153027210EB6B73
A36E3885CA039FF5617619C6FEDAAF618DA7B5D00433BF18F0CE103B2A556503
083B641DA5C3598D91BB77155F3402636809641F3D562A16C31FECD15FB41981
503A2F6FA9F75B18908742BD3F54207853961B13757598E7AE2CCDDBE8581F0F
5D94103D8B70B7979BF7A3FE66ACE026B9E0DEFC43F858ECAB3912FD9D82E63D
DF976800E0A3149575FEB0C6B62158609229D4F23F098B2BFE37F38CCF7B7994
5FA5B28D52552FC310CDE45EB877FDA79E8ADA694F68B334D196D534A1D73EE0
3E1C6A9EFB7EC70DC6060A5CF40943D54DEB3E783275F78665FDE836ACC5D10D
BE8702D44178FCDCAE6FDDB6CABB760D630D685331124726EDCA812E4CEA2467
727892F206130B55005C90C8DB47503CB12254E554F46286EFE6BB6B09B0DDB7
5518DFB99CA7E44B6EC3AEF99BBF1ED2145CE8C917C0F38F36BAE7B3F37AB1E5
24E006BD5B1F1E2C999A404E1AA9D8F6BEC4F4A1185EBF6843F290243480D831
722AF4C0486F753F84F4C01F6FB70DC13B8F6F66A614EFAF9FE9185001637D85
218D37A88AC788CF9C438D5F8A9DB47D4ECC5DE1745E800BCA9F63D89551A426
FB8FCA992FA59F61F868D1618FB3602E5B0D04BFC14C773B5DCCF4E296A7EC16
E543F61C85FD08D121B4297244B91F559C23A917386C58639D2700B4D3EC1203
6F6ACD0653EA18ECCDFAE5ED6295B38B1335014D267585D44FD8862100453333
CCA952AA953127E598297864C29754072C50DA8EE3EC5957F5F20916E04B4B91
497650DD817B40A1F3A86C456DD85C012264284BAE440158636E15B800C75A86
6509B1E07EB9F6F0DBB1460612F182B849535AD5DF8ED43F0323459E3EEFD1BF
B4336DB593A2DE147ECDC46E00AF90262E5454EA1FAB3A3AE82D90AF28E8FF70
7C55BB3148058C81BA391790137B03BB222125B2D8595D589B8FE4A7E8672F58
3CBA2446378C410924928B85889E79E3837BF48219AB8B3F5731D515A06170C6
DF3FD95B97222D3CD603AEA8BCB4A54C8A014B22F9838C21E580F44131E5AB56
27AD75CB9FFF3E3F1DCF9CA04FA8E90A1980964F78DA64DD5CDAC7CE969F08F9
AF326F201D889FF8A511E984E4174D0EF050BA2D95F1698F9D9E76ADC9D60DBD
4EFA271872017E531C334E8C0A198858A2C07998171CA9BF709FE2D9AF529752
497C763501E40F6A97F385BBDECDD32680E8D2EB515936A535AA382C74C6C742
38C182E189F64A7318A9CF66804C98D812C8C5B10E1287D6848B3A5DCC887095
6858EF62BADC94D621F31DCB3E021976C958E8AB6FDFB34C2F256FB2B7EE0834
6D9F2188C5C30C2C404257B5B91B4FC1FBDE71A46C7AF4BF9E227749556B2137
DF00E98CD3FEE2467B320BF1A569DB93466D43E02166EA71E28CD468B05D7210
E35AA6C04088FF291D1F12FBD77E84A55B8CAAF550B087383D4D89EF665851E1
B94FA0EF75487AF991EE6533D78A68140B6F0FE558593B36C661B39FDE013450
5583485BC1C8DEBE958EAA440599E09FBD85D69E25CB2C0BB3B0BB580DCB6614
B20CEA0F1695F2D21C470885928A2939E05D9E5542B02255C9BD5231BAF2CD72
D708202C698AB39B218E7C52E1B7D1EB2E5A49E158F5D5DBC730C41E59A49941
EFB050B9EC0A6DEAF4ED33BB8F562F230A6B1F36226C4BF4595C30E2DFE57ACD
F0E7A4343F415DBCB40AD87A29F1884E7C4BBE4072CB638CCA60BF36538959BE
633F3A2FAFADD77998E0393F996793A789D3D753526C037067157A2F7CD55A6E
B5D03325CD9DA22121D800D1FB1034F8648893F4DBF16648A6EB4E7CA147569C
09A7E600C10BC19EF1AB2C58029E46F4F340E05FB7ABB80B3D7654DA4C47377B
9E94BB00F0736C9AB03F51C272813A6BAA4F7CF2CCF5E8C1527209F2F1C4E982
A83379FD278A2CCBB0DCBCE1E16FBCC8C7075F4B865C98543F4A28C0BC1FBFE5
B9F29728E0A832032968F39282D0236E0983D9E93B77D18BD8C2A189E6BE4575
3FDDB9EE80A170AA0BE77185AE237E6366A0B1B03CF388611041F329E292B862
2AD737D670C54B52C487E20D48614E1F82BDA56669879C7BB7B834AB13031737
9F3974EA99A047430EFC2DD483669A7C0B93937B8AD270101201AE80B736CCF4
41AD617A49B90B22D918C8DC39A8BA5BB12472AF22F98DC93DFB0698463ADFE0
C7AD81C088C91DF0CD9EFAA4CAB9B8BDD7C53C7201F801926EFA03DB5A92D288
89ABAC4D87A6452C092484FA6FAA13FB0107BF1D33B9E037AFF4133F401D97C5
C8503E9F28F47301ECF88C4733FA4D354C60A325F73867110D0AB0255C527828
E5E203F389A93B2CB86F436AAE4B04C45D83D8480B66E5F2F5A1E759E440C8D8
C8186A4FF9B3ECAE2B31D6AD076E6163D99E6F0CBF5E8ED425B395C44F55FB17
E6776856AD5621F2191373A7E03F415011B710759883D078D9AFF5F853AE609D
F7330A51408D7AD729252F320C845FAA3046063568C58672A63A77BCB24D2D2A
89334A2D216E921B211924DB0E28F2770D3A385F64C7748B53E81B00974DFBF4
EAFEA8679DCB7D2970392C6FD53D35E3B0911073216C8B7FE46E311EC33E6EA3
8E926EBBAB3C0D9314FC4E5BB54C36ABF02D3A45C77C68D84BE2F9D6864F5F56
DCBC56BF7B8A73583D5FE7E0BB62BF9FB12D2F72A5F4B8FDE73FB3177AADC29C
431C9075E6CA04DDAF00BC39DA2116DC675662842977EAF575C97D7453273C66
126640C41F2A5552E02ADED03D85EB63F28781AF1635C11F06DC9838F3777745
AEB998245347B1238E7D072CEE580FA9A7ED0225487A55D6093B80F7F0E36C6C
7B5693376D2A1FF63649850CD9DB945D1AF32E8A9586A546DC8859E7BD24B203
91C688713C7F03BCBCD562759CBE94274944BEB0E638E7A0FD766D78C0E99409
EE6588CFABC492F2D5A0E56AE71177537869694D7B76BA6DB851B00B7EC1A9C2
6FE9E81D49A554DE0BCC95E3F15B154B0CE70D783976E2799D009FBB134002FB
4F5589D627DF9CA124E5DCE497EB9974847668CE13F2FD55A503C0AC1655E159
DF46DC84406D6085C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 37293595 25732579 1000 9000 9000 (psv_about.dvi)
@start /Fa 12[1037 12[1037 18[1453 23[934 1[934 7[934
5[1037 570 3[1037 3[934 1037 5[1141 1[1141 7[1246 5[1349
1171 3[1246 3[1349 1246 5[1037 934 934 934 1349 934 1037
519 934 622 1037 1037 1037 1037 1556 415 934 415 519
1037 1037 519 1037 1037 934 1037 1037 6[1141 1246 1246
1763 1246 1349 1141 1246 1349 1453 1246 1453 1349 1556
1037 1246 934 519 1349 1453 1141 1246 1349 1349 1246
1246 1896 2[1046 1[519 519 1037 1037 1037 1037 1037 1037
1037 1037 1037 1037 1[519 622 519 1046 1[622 622 413
1246 4[519 33[{encqhv ReEncodeFont}95 1868 /QuasiSwiss-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 9000dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -9000 -9000 a
 /TeX_matrix [[72 Resolution div 0 0 72 VResolution div 0 0] {dup dup round sub abs 0.00001 lt {round} if} forall] def /unit {0 TeX_matrix matrix invertmatrix dtransform dup mul exch dup mul add sqrt} def /trueunit {0 matrix defaultmatrix matrix currentmatrix matrix invertmatrix matrix concatmatrix dtransform dup mul exch dup mul add sqrt} def /mm {25.4 div 72 mul unit} def /v{/Ry exch def/Rx exch def V} def /V{gsave newpath transform round exch round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto closepath fill grestore} def /fshow{gsave 72 TeXDict /Resolution get div -72 TeXDict /VResolution get div scale 1 DVImag div dup scale get cvx exec show grestore}def /TIFFDirectory (bop/) def /EPSDirectory (bop/) def /EPSSDirectory (epss/) def
 -9000 -9000 a -9000
-9000 a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a 26433 -9000 a
 currentpoint /OO_y exch def /OO_x exch def
 26433 -9000 a -9000
-9000 a
 gsave
 -9000 -9000 a -10772 -10772 a
 currentpoint /OO_y exch def /OO_x exch def
 -10772 -10772 a
-10772 -10772 a
 currentpoint /p1_y exch def /p1_x exch def
 -10772 -10772 a -10772 41669 a
 currentpoint /OO_y exch def /OO_x exch def
 -10772
41669 a -10772 41669 a
 currentpoint /p2_y exch def /p2_x exch def
 -10772 41669 a 63638 41669 a
 currentpoint /OO_y exch def /OO_x exch def
 63638
41669 a 63638 41669 a
 currentpoint /p3_y exch def /p3_x exch def
 63638 41669 a 63638 -10772 a
 currentpoint /OO_y exch def /OO_x exch def
 63638
-10772 a 63638 -10772 a
 currentpoint /p4_y exch def /p4_x exch def
 63638 -10772 a -9000 39898 a
 newpath p1_x p1_y moveto p2_x p2_y lineto p3_x p3_y lineto p4_x p4_y lineto closepath clip newpath

-9000 39898 a -9000 -9000 a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a -9000 -9000
a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a White 1362 x Fa(ABCD)o(EF)q(GHIJKLMN)o(O)q(PQRS)-56
b(TUV)o(W)q(XYZabcd)o(efghijkl)o(m)q(n)o(opq)o(r)10 b(s)-10
b(t)q(u)o(vwxyz)p Black -9000 -9000 a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a White
1765 x Fa(\201\202\206\212\213\323\221\231\233\241\242\246\252\253)o
(\363\261\271\273012)o(345)o(6789)o(,)q(.;:)q(')o(\(\)!)q(+-=)p
Black 26433 15449 a
 currentpoint /OO_y exch def /OO_x exch def
 26433 15449 a 8717 -2268 a
 /SItps save N /isls false N statusdict begin /setpageparams {pop pop pop pop} def /setpage {pop pop pop} def end userdict begin /bop-hook {} def /setpagedevice {pop} def /a0 {} def /a1 {} def /a2 {} def /a3 {} def /a4 {} def /a5 {} def /a6 {} def /a7 {} def /a8 {} def /a9 {} def /a10 {} def /b0 {} def /b1 {} def /b2 {} def /b3 {} def /b4 {} def /b5 {} def /letter {} def /note {} def /legal {} def /halfletter {} def /11x17 {} def /ledger {} def /flsa {} def /flse {} def end
 8717 -2268
a 35433 x @beginspecial 12.104000 @llx 4.715000 @lly
450.476013 @urx 443.085999 @ury 2834.638672 @rwi @setspecial
%%BeginDocument: rys/psv_logo.eps
/GSexport 100 dict def GSexport begin
/h {closepath} def
/m {moveto} def
/c {curveto} def
/l {lineto} def
/k {setcmykcolor} def
/K {setcmykcolor} def
/*u {/oper_kind -1 def} def
/*U {*U*f *U*d *U*c} def
/f {/oper_kind 0 def} def
/*U*f {0 oper_kind eq {eofill} if} def
/s {closepath /oper_kind 1 def} def
/S {/oper_kind 1 def} def
/*U*d {1 oper_kind eq {stroke} if} def
/W {} def
/n {/oper_kind 2 def} def
/*U*c {2 oper_kind eq {eoclip newpath} if} def
/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/setcmykcolor where {pop}
 {/setcmykcolor {1 sub /mf exch def
 3 {mf add neg dup 0 lt {pop 0} if 3 1 roll} repeat
 setrgbcolor} def} ifelse
/q {gsave} def
/Q {grestore} def
q
*u
6.262 w 0 j 0 J 2.613 M 
[] 0 d
0.2 0.1 0 0 K
448.91 282.219 m
330.511 261.475 291.37 462.656 172.971 441.912 c
193.911 323.317 -7.27 284.177 13.67 165.581 c
132.069 186.717 171.21 -14.464 289.609 6.28 c
268.669 124.875 469.85 164.016 448.91 282.219 c
s
*U
*u
0.2 0.1 0 0 k
128.378 169.016 m
118.01 169.326 l
119.248 142.554 l
133.485 144.875 147.412 147.042 161.649 147.661 c
162.578 166.385 l
139.52 167.933 l
140.139 196.897 l
149.888 190.242 157.316 183.562 169.696 183.253 c
194.92 182.634 205.443 212.681 205.443 232.953 c
205.443 254.618 189.968 266.688 171.553 265.141 c
157.316 264.057 147.722 255.856 139.211 248.583 c
139.83 266.688 l
129.926 262.51 120.176 260.653 109.344 260.343 c
106.868 241.928 l
128.069 240.071 l
128.378 169.016 l
f
140.449 215.002 m
140.139 222.275 l
140.139 232.334 155.614 240.071 170.315 241 c
180.993 241.928 190.897 235.893 190.897 223.823 c
190.897 213.3 186.409 205.408 172.482 205.408 c
160.721 205.717 150.198 208.348 144.627 212.371 c
140.449 215.002 l
f
*U
*u
0.2 0.1 0 0 k
245.832 265.76 m
228.036 266.379 216.275 253.689 215.347 235.584 c
215.037 224.751 224.941 220.109 235.619 217.788 c
250.01 214.693 l
255.736 213.609 266.104 213.3 266.104 209.895 c
266.104 204.17 256.046 202.003 244.285 201.694 c
233.452 202.003 221.072 204.17 216.275 206.027 c
211.323 193.337 l
220.763 186.374 232.524 183.253 247.38 182.944 c
264.247 182.324 281.734 192.409 282.043 209.276 c
282.353 222.894 267.652 225.061 255.427 227.692 c
242.273 230.786 l
236.392 232.025 229.738 234.346 229.274 239.298 c
228.965 245.642 237.94 247.654 246.451 247.654 c
253.415 247.654 259.45 246.416 260.379 245.642 c
259.45 244.095 259.14 242.238 258.831 240.381 c
259.14 235.584 263.628 232.334 269.045 232.643 c
275.08 232.953 278.794 237.75 278.794 243.476 c
278.794 253.07 269.045 265.141 245.832 265.76 c
f
*U
*u
0.2 0.1 0 0 k
377.833 264.986 m
338.527 262.2 l
339.765 241.619 l
350.133 241.619 l
337.289 211.443 l
323.516 211.443 l
315.005 240.69 l
326.766 240.071 l
326.766 248.273 327.385 256.475 328.623 264.676 c
289.317 261.582 l
287.46 241.619 l
297.518 241.309 l
306.184 221.966 314.386 202.622 321.35 182.634 c
340.074 183.562 l
347.038 203.551 355.858 222.585 366.691 241 c
375.821 240.381 l
375.821 249.821 376.285 253.999 377.833 264.986 c
f
*U
Q
end
showpage

%%EndDocument
 @endspecial 8717 33165 a
 SItps restore
 8717 33165 a 26433 15449 a
 currentpoint /OO_y exch def /OO_x exch def

26433 15449 a Blue 19346 -1323 a
gsave currentpoint 185.01277 100 div div exch 185.01277 100 div div exch currentpoint neg 185.01277 100 div mul exch neg 185.01277 100 div mul exch translate 185.01277 100 div 185.01277 100 div scale translate
 19346 -1323 a Fa(PS\346Vie)-19
b(w)27007 -1323 y
grestore
 27007 -1323 a Black 8717 2320 a
gsave currentpoint 140.91505 100 div div exch 140.91505 100 div div exch currentpoint neg 140.91505 100 div mul exch neg 140.91505 100 div mul exch translate 140.91505 100 div 140.91505 100 div scale translate
 8717
2320 a Fa(p)o(r)h(e)-29 b(vi)q(e)-19 b(w)g(e)o(r)622
b({)g(P)-46 b(o)o(s)-9 b(t)-18 b(S)o(cr)q(ip)-10 b(t)623
b(&)f(P)o(DF)33862 2320 y
grestore
 33862 2320 a 6369 5122 a
gsave currentpoint 140.91505 100 div div exch 140.91505 100 div div exch currentpoint neg 140.91505 100 div mul exch neg 140.91505 100 div mul exch translate 140.91505 100 div 140.91505 100 div scale translate
 6369
5122 a Fa(g)o(r)-9 b(aph)o(i)q(ca)o(l)622 b(int)-28 b(er)47
b(f)-19 b(ace)622 b(f)-19 b(or)622 b(G)q(h)o(os)-9 b(tscrip)g(t)34846
5122 y
grestore
 34846 5122 a 8717 34740 a
gsave currentpoint 93.46014 100 div div exch 93.46014 100 div div exch currentpoint neg 93.46014 100 div mul exch neg 93.46014 100 div mul exch translate 93.46014 100 div 93.46014 100 div scale translate
 8717 34740 a Blue -25218
x Fa(V)-103 b(er)9 b(sion:)p Black 19329 9522 a
 PS_VIEW show
 19329
9522 a Blue 8717 12324 a Fa(L)o(i)q(ce)o(nse:)p Black
3559 w(GNU)621 b(G)q(e)o(ner)-10 b(al)622 b(Pub)o(lic)g(License)p
Blue 8717 15126 a(A)-19 b(ut)-9 b(h)o(or)9 b(s:)p Black
3681 w(P)-253 b(.)623 b(S)-10 b(t)q(r)18 b(zelczyk,)622
b(P)-252 b(.)622 b(Piano)-19 b(w)-10 b(ski)p Blue 8717
17928 a(A)-19 b(dd)o(r)h(e)o(ss:)p Black 3285 w(B)-10
b(OP)622 b(s.)150 b(c.)19329 20730 y(Gen)o(.)623 b(T)-187
b(.)622 b(Bor)-9 b(a-K)-56 b(o)o(mor)-9 b(o)-19 b(w)-10
b(skiego)622 b(2)o(4)19329 23532 y(8)o(0)149 b(-)h(37)o(7)622
b(Gda\253sk,)g(P)-47 b(ola)o(nd)19329 26334 y(b)o(op@b)o(op.com.pl)p
Blue 8717 31938 a(Gho)o(s)-9 b(tscri)q(p)f(t)-56 b(:)p
Black 19329 31938 a
 revision 100 div val_str cvs show
 19329 31938 a Blue 8717 34740 a Fa(L)o(i)q(b)o(r)-9
b(aries:)p Black 19329 34740 a
 /INFO_dict where {pop INFO_dict /LuaName known {INFO_dict /LuaName get show (, ) show} if INFO_dict /wxLuaName known {INFO_dict /wxLuaName get show (, ) show} if INFO_dict /wxWidgetsName known {INFO_dict /wxWidgetsName get show} if }{pop} ifelse
 19329 34740 a 46629 34740
a
grestore
 46629 34740 a -9000 39898 a
 grestore
 -9000 39898 a eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
