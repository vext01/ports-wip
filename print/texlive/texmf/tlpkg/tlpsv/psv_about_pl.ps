%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96 Copyright 2005 Radical Eye Software
%%Title: psv_about_pl.dvi
%%CreationDate: Tue Jul  1 16:19:32 2008
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 567 392
%%DocumentFonts: QuasiSwiss-Regular
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -tunknown psv_about_pl.dvi
%DVIPSParameters: dpi=9000, comments removed
%DVIPSSource:  TeX output 2008.07.01:1619
%%BeginProcSet: tex.pro 0 0
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: qhv.enc 0 0
/encqhv[
/alpha
/Delta
/beta
/delta
/pi
/Pi
/Sigma
/mu
/ellipsis
/f_k
/Omega
/ff
/fi
/fl
/ffi
/ffl
/dotlessi
/dotlessj
/grave
/acute
/caron
/breve
/macron
/ring
/cedilla
/germandbls
/ae
/oe
/oslash
/AE
/OE
/Oslash
/space
/exclam
/quotedblright
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/exclamdown
/equal
/questiondown
/question
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/quotedblleft
/bracketright
/circumflex
/dotaccent
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/endash
/emdash
/hungarumlaut
/tilde
/dieresis
/Euro
/Aogonek
/Cacute
/greater
/greaterequal
/approxequal
/Eogonek
/Iogonek
/less
/lessequal
/Lslash
/Nacute
/asciitilde
/asciicircum
/ell
/dagger
/daggerdbl
/Sacute
/Scaron
/Scommaaccent
/degree
/Tcommaaccent
/ogonek
/Uogonek
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/.notdef
/braceleft
/braceright
/section
/.notdef
/aogonek
/cacute
/registered
/copyright
/divide
/eogonek
/iogonek
/minus
/multiply
/lslash
/nacute
/plusminus
/infinity
/guillemotleft
/guillemotright
/paragraph
/sacute
/scaron
/scommaaccent
/bullet
/tcommaaccent
/.notdef
/uogonek
/ydieresis
/zacute
/zcaron
/zdotaccent
/.notdef
/periodcentered
/quotedbl
/quotesingle
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/backslash
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/currency
/perthousand
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/bar
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/underscore
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/anglearc
/diameter
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/quotedblbase
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 userdict begin /ori_setcmykcolor where {pop} {/ori_setcmykcolor /setcmykcolor
load def} ifelse /ori_setrgbcolor where {pop} {/ori_setrgbcolor /setrgbcolor
load def} ifelse /ori_setgray where {pop} {/ori_setgray /setgray load
def} ifelse /ori_colorimage where {pop} {/ori_colorimage /colorimage
load def} ifelse /ori_image where {pop} {/ori_image /image load def}
ifelse /ori_imagemask where {pop} {/ori_imagemask /imagemask load def}
ifelse /ori_fill where {pop} {/ori_fill /fill load def} ifelse /ori_eofill
where {pop} {/ori_eofill /eofill load def} ifelse /ori_stroke where
{pop} {/ori_stroke /stroke load def} ifelse /ori_show where {pop} {/ori_show
/show load def} ifelse /ori_grestore where {pop} {/ori_grestore /grestore
load def} ifelse /ori_gsave where {pop} {/ori_gsave /gsave load def}
ifelse /hax_setcmykcolor /ori_setcmykcolor load def /maybe_black {
4 copy 1 sub abs epsilon le exch 0 sub abs epsilon le and exch 0 sub
abs epsilon le and exch 0 sub abs epsilon le and /if_delblack exch
def } def /my_fill {userdict begin if_delblack {newpath} {ori_fill}
ifelse end} def /my_eofill {userdict begin if_delblack {newpath} {ori_eofill}
ifelse end} def /my_stroke {userdict begin if_delblack {newpath} {ori_stroke}
ifelse end} def /my_show {userdict begin if_delblack {false charpath
currentpoint newpath moveto} {ori_show} ifelse end} def /my_gsave {c_
m_ y_ k_ ori_setcmykcolor ori_gsave c_ m_ y_ k_ setcmykcolor} def /my_grestore
{ori_grestore currentcmykcolor setcmykcolor} def /eofill {userdict
begin my_eofill end} def /fill {userdict begin my_fill end} def /stroke
{userdict begin my_stroke end} def /show {userdict begin my_show end}
def /gsave {userdict begin my_gsave end} def /grestore {userdict begin
my_grestore end} def /setcmykcolor {userdict begin /k_ exch def /y_
exch def /m_ exch def /c_ exch def c_ m_ y_ k_ hax_setcmykcolor end}
def /setgray {ori_setgray currentcmykcolor setcmykcolor} def /setrgbcolor
{ori_setrgbcolor currentcmykcolor setcmykcolor} def /hax_image { dup
type cvlit /dicttype eq { /ImageDict exch def currentcolorspace dup
length 1 eq ImageDict /ImageType get 1 eq and {0 get dup /DeviceRGB
eq {/ncomp 3 def} if dup /DeviceGray eq {/ncomp 1 def} if /DeviceCMYK
eq {/ncomp 4 def} if ImageDict /BitsPerComponent get 8 ne ncomp 1 ne
and {/ncomp 0 def} if } {pop /ncomp 0 def} ifelse } { false 1 makeimagedict
} ifelse ncomp 0 eq {ImageDict ori_image} {hax_image_} ifelse } def
/hax_colorimage { makeimagedict hax_image_ } def /makeimagedict { dup
/ncomp exch def dup 4 eq {/DeviceCMYK setcolorspace} if dup 3 eq {/DeviceRGB
setcolorspace} if 1 eq {/DeviceGray setcolorspace} if /ImageDict 7
dict def ImageDict begin {/MultipleDataSources true def ncomp array
astore} if /DataSource exch def /ImageMatrix exch def /BitsPerComponent
exch def /Height exch def /Width exch def /Decode [ncomp {0 1} repeat]
def /ImageType 1 def end } def /data_str 65532 string def /data_str_
8192 string def /merge_multi4 { ImageDict /DataSource get aload pop
dup type cvlit /filetype eq { /fdatsrck exch def /fdatsrcy exch def
/fdatsrcm exch def /fdatsrcc exch def /datasrck {fdatsrck data_str_
readstring pop} def /datasrcy {fdatsrcy data_str_ readstring pop} def
/datasrcm {fdatsrcm data_str_ readstring pop} def /datasrcc {fdatsrcc
data_str_ readstring pop} def } { /datasrck exch def /datasrcy exch
def /datasrcm exch def /datasrcc exch def } ifelse ImageDict /DataSource
{ data_str 0 datasrcc {3 copy put pop 4 add} forall pop 1 datasrcm
{3 copy put pop 4 add} forall pop 2 datasrcy {3 copy put pop 4 add}
forall pop 3 datasrck {3 copy put pop 4 add} forall 3 sub 0 exch getinterval
} put } def /merge_multi3 { ImageDict /DataSource get aload pop dup
type cvlit /filetype eq { /fdatsrcb exch def /fdatsrcg exch def /fdatsrcr
exch def /datasrcb {fdatsrcb data_str_ readstring pop} def /datasrcg
{fdatsrcg data_str_ readstring pop} def /datasrcr {fdatsrcr data_str_
readstring pop} def } { /datasrcb exch def /datasrcg exch def /datasrcr
exch def } ifelse ImageDict /DataSource { data_str 0 datasrcr {3 copy
put pop 3 add} forall pop 1 datasrcg {3 copy put pop 3 add} forall
pop 2 datasrcb {3 copy put pop 3 add} forall 2 sub 0 exch getinterval
} put } def /i_Str 3 string def /O_Str 4 string def /UCR {0.5 mul}
def /BG {0.7 mul} def /min {1 index 1 index le {pop} {exch pop} ifelse}
def /max {1 index 1 index ge {pop} {exch pop} ifelse} def /RGBtoCMYK
{dup 0 get R_scale mul R_shift add /c_i exch def dup 1 get G_scale
mul G_shift add /m_i exch def 2 get B_scale mul B_shift add /y_i exch
def /k_i c_i m_i y_i min min def O_Str dup 0 255 0 c_i k_i UCR sub
cvi max min put dup 1 255 0 m_i k_i UCR sub cvi max min put dup 2 255
0 y_i k_i UCR sub cvi max min put dup 3 255 0 k_i BG cvi max min put
} def /RGBtoCMYKfilter { ImageDict /Decode get aload pop 2 copy sub
/B_scale exch def pop 255 mul 255 exch sub /B_shift exch def 2 copy
sub /G_scale exch def pop 255 mul 255 exch sub /G_shift exch def 2
copy sub /R_scale exch def pop 255 mul 255 exch sub /R_shift exch def
/rtc_file ImageDict /DataSource get def ImageDict /DataSource {rtc_file
i_Str readstring {RGBtoCMYK} if} 0 () /SubFileDecode filter put /DeviceCMYK
setcolorspace /ncomp 4 def ImageDict /Decode [0 1 0 1 0 1 0 1] put
} def /sep_str 8192 string def /SEP_CMYK { 0 hax_sep 4 3 index length
1 sub { 2 index exch get 3 copy put pop 1 add } for dup 0 ne {0 exch
getinterval}{pop pop ()} ifelse } def /SEPfilters { ncomp 4 eq { useDeviceN
{ ImageDict begin /Decode [ Decode aload pop 4 {exch 8 2 roll} repeat
] def end [ /DeviceN [/XCyan /XMagenta /XYellow /XBlack ] /DeviceGray
hax_sep 0 eq {{pop pop pop}} if hax_sep 1 eq {{pop pop exch pop}} if
hax_sep 2 eq {{pop 3 1 roll pop pop}} if hax_sep 3 eq {{4 1 roll pop
pop pop}} if hax_sep 3 gt {{pop pop pop}} if ] setcolorspace } { hax_sep
3 le { /sepproc /SEP_CMYK load def ImageDict begin /Decode [ Decode
hax_sep 2 mul 1 add get Decode hax_sep 2 mul get ] def end } { /sepproc
{dup length 4 idiv 0 exch getinterval} def } ifelse /sep_file ImageDict
/DataSource get def ImageDict /DataSource {sep_file sep_str readstring
pop sepproc} 0 () /SubFileDecode filter put /DeviceGray setcolorspace
} ifelse } {hax_sep 3 ne {ImageDict /Decode [ 1 1 ] put} if } ifelse
hax_sep 4 eq {ImageDict /Decode [ 1 1 ] put} if hax_sep 5 eq {ImageDict
/Decode [ 0 0 ] put} if } def /change_str 12288 string def /CHANGEfilter
{ /change_file ImageDict /DataSource get def ImageDict /DataSource
{ change_file change_str readstring pop 0 ncomp 2 index length ncomp
sub { 1 index exch 2 copy ncomp getinterval changebits putinterval
} for } 0 () /SubFileDecode filter put } def /hax_image_ { ImageDict
/MultipleDataSources known { ImageDict /MultipleDataSources get { ImageDict
/MultipleDataSources false put ImageDict /DataSource get length dup
4 eq {merge_multi4} if dup 3 eq {merge_multi3} if 1 eq {ImageDict begin
/DataSource DataSource aload pop def end} if } if } if ImageDict begin
/DataSource dup load Width BitsPerComponent mul 7 add 8 idiv Height
ncomp mul mul () /SubFileDecode filter def end to_change_bitmap {CHANGEfilter}
if ncomp 3 eq to_convert_bitmap and {RGBtoCMYKfilter} if ncomp 3 ne
to_sep_bitmap and {SEPfilters} if ImageDict ori_image } def /zero_data_str
65532 string def /hax_imagemask { if_delblack { dup type cvlit /dicttype
eq { /ImageDict exch def } { /ImageDict 7 dict def ImageDict begin
/DataSource exch def /ImageMatrix exch def /Decode exch {[1 0]} {[0
1]} ifelse def /Height exch def /Width exch def /BitsPerComponent 1
def /ImageType 1 def end } ifelse ImageDict begin /DataSource load
Width 7 add 8 idiv Height mul () /SubFileDecode filter end /mask_file
exch def ImageDict /DataSource { zero_data_str 0 mask_file data_str
readstring pop length getinterval } 0 () /SubFileDecode filter put
ImageDict /Decode [1 0] put ImageDict ori_imagemask } {ori_imagemask}
ifelse } def /truebp {0 matrix defaultmatrix matrix currentmatrix matrix
invertmatrix matrix concatmatrix dtransform dup mul exch dup mul add
sqrt} def /truein {72 mul truebp} def /truept {72.27 div truein} def
/truesp {65536 div truept} def /truedd {1238 mul 1157 div truept} def
/truecc {12 mul truedd} def /truemm {25.4 div truein} def /truecm {10
mul truemm} def /epsilon 0.005 def /if_delblack false def /to_change_bitmap
false def /to_convert_bitmap false def /to_sep_bitmap false def currentcmykcolor
setcmykcolor end

 userdict begin /useDeviceN true def end

 userdict begin /scaledpoint {65536 div 72.27 div 72 mul} def /setsuperblack
{1 1 1 1 setcmykcolor} def /cropdist 932339 scaledpoint def /cropsize
932339 scaledpoint def /cropthick 9323 scaledpoint def /croplin {gsave
cropthick setlinewidth 0 setlinecap setsuperblack newpath cropdist
0.5 cropsize mul add dup 0.3 cropsize mul 0 360 arc closepath stroke
newpath cropdist 0.5 cropsize mul add cropdist moveto 0 cropsize rlineto
stroke newpath cropdist cropdist 0.5 cropsize mul add moveto cropsize
0 rlineto stroke newpath 0 cropdist moveto 0 cropsize rlineto stroke
newpath cropdist 0 moveto cropsize 0 rlineto stroke grestore} def /cropmark
{gsave cropthick setlinewidth 0 setlinecap setsuperblack newpath 0
0 0.3 cropsize mul 0 360 arc closepath stroke newpath -0.5 cropsize
mul 0 moveto cropsize 0 rlineto stroke newpath 0 -0.5 cropsize mul
moveto 0 cropsize rlineto stroke grestore} def /lin {gsave cropthick
setlinewidth 0 setlinecap setsuperblack newpath cropdist 0 moveto cropsize
0 rlineto stroke grestore} def end

 userdict begin /scaledpoint {65536 div 72.27 div 72 mul} def /setcyan
{1 0 0 0 setcmykcolor} def /setmagenta {0 1 0 0 setcmykcolor} def /setyellow
{0 0 1 0 setcmykcolor} def /setblack {0 0 0 1 setcmykcolor} def /setsuperblack
{1 1 1 1 setcmykcolor} def /cmyksize 372935 scaledpoint def /cmykthick
9323 scaledpoint def /cmykhalf cmyksize 0.5 mul def /cmykquarter cmyksize
0.25 mul def /cmykcropmark {gsave cmykthick setlinewidth 0 setlinecap
newpath setsuperblack cmykquarter neg 0 moveto cmykhalf 0 rlineto stroke
setsuperblack 0 cmykquarter neg moveto 0 cmykhalf rlineto stroke setblack
cmyksize neg cmykhalf moveto cmykhalf neg 0 rlineto stroke setcyan
0 cmykhalf moveto cmyksize neg 0 rlineto stroke setmagenta 0 cmykhalf
moveto cmyksize 0 rlineto stroke setyellow cmyksize cmykhalf moveto
cmykhalf 0 rlineto stroke setcyan cmyksize neg cmykhalf neg moveto
cmykhalf neg 0 rlineto stroke setyellow 0 cmykhalf neg moveto cmyksize
neg 0 rlineto stroke setblack 0 cmykhalf neg moveto cmyksize 0 rlineto
stroke setmagenta cmyksize cmykhalf neg moveto cmykhalf 0 rlineto stroke
setblack cmykhalf neg cmyksize neg moveto 0 cmykhalf neg rlineto stroke
setyellow cmykhalf neg 0 moveto 0 cmyksize neg rlineto stroke setcyan
cmykhalf neg 0 moveto 0 cmyksize rlineto stroke setmagenta cmykhalf
neg cmyksize moveto 0 cmykhalf rlineto stroke setcyan cmykhalf cmyksize
neg moveto 0 cmykhalf neg rlineto stroke setblack cmykhalf 0 moveto
0 cmyksize neg rlineto stroke setmagenta cmykhalf 0 moveto 0 cmyksize
rlineto stroke setyellow cmykhalf cmyksize moveto 0 cmykhalf rlineto
stroke grestore} def end
 
@fedspecial end
%%BeginFont: QuasiSwiss-Regular
%!PS-AdobeFont-1.0: QuasiSwiss-Regular 1.07
%%CreationDate: 12.01.2002
% Generated by MetaPost
% QX extension by JNS Team (see www.GUST.org.pl).
% ADL: 729 216 55
%%EndComments
FontDirectory/QuasiSwiss-Regular known{/QuasiSwiss-Regular findfont dup/UniqueID known{dup
/UniqueID get 0 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
17 dict begin
/FontInfo 9 dict dup begin
/version(1.07)readonly def
/Notice(QX extension by JNS Team (see www.GUST.org.pl).)readonly def
/FullName(QuasiSwiss-Regular)readonly def
/FamilyName(QuasiSwiss)readonly def
/Weight(Regular)readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition -127 def
/UnderlineThickness 50 def
end readonly def
/FontName /QuasiSwiss-Regular def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
%/UniqueID 0 def
/FontBBox{-174 -285 1000 959}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0525392EECAC163E584A9104D99AD0BC
1B1844A0E222653FA481B8809B26A46F4C483A5D7E95816EA6582584156CFEDE
B994ADCFF4645140E3617E4D7E1B0E4541CB9F562E55829B4DD880AABE2229E9
4A9FA259A734D29BBA91BA1E2055CBEA4339BCBFF98D32CEFF11F296225CAABA
DCA10577A5D431B714726C1278D8101ABD1BD8D0BD0174FFF9148F8C61C241D9
2AD360A28616CB4A0670C1BF13E5D071F743ACDAD8F4F97A172F977C3F97E343
F4A3478877F53C5499AB64462D95993B13D9EB1E1A87443B4DAD1A424334C7C3
93173E4450DA2568A0AA892EB87B078CC6BDBD48C5E71AD224DD23027CFCC6FA
BB2E3882A14C0F81CB92941A12D4CEF33D758ABC67EEA7452F0DD040612A5F91
A8D8F9866DF37EA9CEC4814906E05F8C143BB09E42B8A1688B764C00AFA45552
5B4CEAC2AB9BA06075FAD345C12F4CFC2FF0DA615C8A70FFDAFF248BC9227175
7AD37A2C3A05FBB1397D2D628B47356F58A71E702F3D716C0A6512ADEE8E89ED
0F29D27B15CD4306D7251D63B2F3A3B5AAFF55ABAE0C1DFA37661A21901AE7DE
B920CCD9BEB91A16D9D568D7DC6376C15CD364FE2A7C9DB648C631D5724D9FE8
ECBB8011CD6F52BAB95C31A693E9C6307CE602E1E9B116FE182AA9D0218DA75F
255BCAEBAA3E8468B33C6AE1B7BD61A39CA97413A76A4A2E35415C9F1CB7DDCA
DCE96CB612572BEA8C3D6CDB9F07B6A46EEE24CC417E10395C3237955CF72507
B964AB83D8F330AC17FAA8048A02A45866C6C06A96A49BB4F54CEA3EEDD26E0F
D545B3833FAE346DB0966D1F1396C81A21F533B9CF4CCE756EE50C6CB606FAF4
C43CBA4F43920EC2C963C3E41CF192346273D4C72BA71A8083BD014F9AD09552
AF4BF9B85CF949C754D36757E004FF3F5C9E4C5A6C689B024CE59B977FC47974
D0A731D84DE0F8334C876E74256A3F9F1958140ED4F7C537C04BF4B9F56EA434
B58C5000DACFEF4CF42647EE674510EF2CE12F4012B73A9B4DFB3A8B2373232C
E5CA1AA372C6C92C815DC4D1641A9A92DF9A094EB9F801823AFFED8180480699
E77641283457413BB6AA20E5946B0BB383C416678EDCAD2D3C9858A1A64A8A1C
79842AA9E78DB2A52DFEB85CB1831774222E92C6A3B13DFEFAC48E5414911439
D351CF9EB086BC1CBF53DEEF1FE81188A169292DBDA6C5441F953DA19A6AB424
DA29964EFD2FE8D0E5EE627772619ED54F5CA3A14911F452C33ABE95D7230E14
439D973158CC58ECB307F0D372DDCB8CAFF30FE0843CB33249EDBE568910A40F
1A19008FCC92C461BF5463C5A1C471B6B22586FDC33C0B57B8121A58AB758A95
CF9695F43FA3575F7FAF092943B9666224238D328C48F6D8A346D64697546C06
A9125A3B90CE131DBCDBAD35A6388CFBC335D2BE90B5C581D1E84F9E76CF920B
7BEC2E3679ECCA31C5DD602964AF4533BA8AD4CB58532AF7191B77CA3737E477
4F66DF77395FB0F96D19115C60E652EF743F21C40B43782C5D4E00A09F155B0E
B96CFE9312BA2A0CC2777CE3821A3028E09B840E807E6F6740A7B21EB035C42C
067B0934BE534D76E035D858CE3BF07CB1E30764FAFF860CA83C4658577EC9AC
F7E71468888D5C6807B4D7F645E55D8BC8B24E3652596FAD4BB9E1AEE8FEDC9E
A5F7B931673B3FFABDD2146CE8A13E32380F1F0526611190E892D8A6FD185CFA
65DF3DB858BCF75E95321A7131547E0C82D586DBA09EF291CC2E8D8CB438052A
C2992420B6F580E30C865DC98E53B30FC4E51D0C7138D32D57A4E8D3A2AB2BE8
86D9D9022750E9D46D72135AC23A90B50712C0A17D7C03E1B8B8B2F95468CD1E
C3FEEC03870155AE380DEC3842F59CC7D52396D3FDA6AB2FFB67061A23953331
DF4BE8804458E1BC7D2172AFE837B7F041CBBDC5EACF25EEE5F4B02C0B505EE6
258A20D9E32E174288D9295618DFB99CA7E44B6EFF6BA0F2F5D28683C25BC570
15FADC64B543BFCC1524D09BD30E36B339866B13AC10BBFEADFC6D39A5B942EF
C9431F72C3B8FDD9F568AF9875BF047EEB6D0BEE5087694C55852F241EF6F397
24098ACB22EEA72138CE45B8F982E1A068E9C61EA876F4FEA72D9EC46EDBDF4F
C7DE2392905875FC28D07872F48FED6ECA640B08B8D586177DB014AB4D745196
AAF73F063E19565F1D434F1B0B6E1EE0AD2510D6B21D5E44574DA49A861E14FB
8153C749EF0DE6EC83878CE9C39699E9EB129DEB430557CC188BD4B33DF5177C
D3C15B71A5F1AD15C37D3EB3C5988F62C7650922F21520BC937BEED880699EC0
893EEEAE8EF961E3CDB118837785D4C45BDB6321EA9F687628C6A20A7385CFA7
C60DBB1875E59CD940B469AFBC921EDB4F97F8D526EB04914F97FBB51A5EE854
0731E514802AB4764D876CA8ABD8B00E1A916BF519D9CBFD8F80DC6E930A018F
967B999ED1F74082531B743058E2AC36E2DCF5B92AC4336C801C993E7AB10201
69E66140ED1D26630B3EECDF552294F3AEAF6C9E9E997BDAE4EF14F9E60E4875
17C8ECCA81ED1DCF653026358C95735248E06086D041BFFB9514E5B8248E84F4
647D674AEEC41A3E496FDEC2C0A1F90C1F4FF62C9DEF4189B84A339700CD6E74
F3BF89884DF1DBD216D1F0D417A96E86F969D73892D142F1F8795AA0E5472451
4A96DCFC689A963DDFB35C8A0EECF092834CE115EBFF2995FCC1C424B7A487A4
8EA5B567B07AA8D634C702038C70BE76D293489BB97B6DF215204753DE7C4A3F
E2B2C41723415C912EF1F70CC3895F4598A5BB79E23DDA5E752BC018EDE986D0
0D3F68C0CBC50521346A87A21C453B7609E685C1A00D822718BBEF12CBB30F43
04FBC6242A65EC78BC20D377D68BED977CDF4E50C83465D5F54B3850227D2F6D
538FEEBDD697C394F6F3B8BAD129A2AF57286E78D8BB50306EAF109D2A2F0C56
DB55B7367C34B4D511EB02457653F21C3EF5CDD1A9D6C65077A8D7AD7FAE19BE
FC003C953DC913183B2BE2ADBC6EBBF762FFDA5CEA3F4B5016D167EA1DC84751
924466FA4727C8709EECEDE5688308EB0C4B651E83B1CBB3FDB77D17D0D9A611
2BF0D1484EA741D84587FD648451F061DCC9970506D4A778672A022D1935DC96
85BBA74AA02ADFAB59DE70F679945611D8CCB8AC705E666737708255E193225B
C60051CC6163A409D01F631F6DD59BC538502D18ECA4CAE179C9CD6222EFAB73
101B470A6263805542515AA19B5E0E9FA83A47EBD11FC8E9A6787E86813FAA0C
5F1ED2BC24B77548F1E28993887A7DD57398AA416BC7BF96029477CAB30ACCE5
C281463B9D81A24C67758887D672CBCA219D2B5841538FE1B0FE8490E26354A0
D16CDDB671CC59BE6D8B935D1A346C5B78CDC74FCCA8483943FEFD671409BBB2
769C8ABD0E1D2974099BFD6576ACF2CDF306EEE9E7630EABC9D0D925689B2548
AA66104BF95D06AA66A717B9867BFA591A9DFE626DDBD34AC593EF6F484665C1
BCB05D38FCDECDE4198AE87BBAC475BA70CDB2554B68523C96EB31C4E7E46A23
CA45788D29E169FC2CB91D21CD482B38FB22FC0DBA9B138EE3B234AFF7BB6C18
6722FD5E0535978D0A53F47166DFB2C258B6D20C96B78BD1D5A73E157AECB9F3
F59C0D7369467349C5CCEF5353BCA7EF8CE6151D158AA7D6F4DBE64EF67CD5D9
39DE9ADB1786283CCEC1FE1442037773349DE530D70160C55FDEB881EF521213
3C9FD7C7BBC8675CE5704DC1AC809046B1B84CC242CDBE481A01700C992CDDC2
A821504F45CAA0E02507D032876D84FF8E0AF8A0ABC2E44EA400455954433066
8C1AFB2FDD4A72EEEE8CA2121FF7288C9ED1C9D6B0EA1CC70460A406C10DEEF8
330355C85FBB37E90D825A61B6714D5788BE542A21A93B495391EF6C45BE6D1F
B3F56C8F84A7A13CCCA4C70D1087CD690D714452D9A6EF9AC68D884E15ACA3BC
C07FCC0D05E6118D5435576BC9871384F13CDA0B6035883C113C2E7A8DF0AB9C
9B35E71B0BE1A3A7054F874D9930B9E0544CA6AB5B87D0824E4A4E81527F6D4D
1AFA10C69AD5034FC9856112429267999EA3548B45715104C19AD63F2DA95091
108D36C8086072F20A661BB4E92AF0B9183F250A60A7950B3939DD77097DF439
B3350F8194910480F0F209BB65AAE476588E972125C7D97A289538A8BFB71342
EE3899DE4C4D47058A4C0BAC128B7D4D61C2AA87093F0D9188350856B847C04A
D5F17FCD1E87796B6F6721ACE5F11E54305CA36FD3A7F768D29951166E7842CC
737495F33CA41CC7435C59250E09A0722970B560097CA8B45C55E1B6382C643D
94A36B2FC74B53A9E929C04FAFAA990BFD6BAEFB56A44965744053106BD5B5E9
9175BBC27E4B5C72435BF4F490AAEF2FBA46A4A07CD5622A67C4FEDEB4DAB92A
E722C326065E48F4EC7FBF2E1158F0590DC36E01531B89D35C673FA22203C7DC
7E116FAF1E90C76924A1DE4063F0A652307DB8258563C5E4BFF09BA5328C3A4F
97A55DB7F1F0792D0090825F89367279B2FBB99A9FC636680D5CAA716D2A6873
9CB256236C6930BCABA147AEEC2AF7FE306AEF01BD11763D0FFBDAB02B7DE8AE
E88E5E00EF34D0D654AAE015921FE10869B894C6B510EB3D191260D99508A036
55C72145D790D081FFE4C2702FBAA1063F79583D1C38DC137F621D95A42999BB
C5CE732427DB6C2002A3127695843FD9CF8D6B1839952BBDA76A07F74A89A9C2
A9568CDCC98A2CCD6ADEC0C68E1DA32F0AF9732853AB792D6D2E80AF718CD013
DA3760F1C2B453DF87A9D12A37D5E42E666B766F572C29D17CF6CBD01BF5092B
4AA982DDE38C63986A9150B875458A6B9BA2550FD4FAB87B8CD93EDDB564B91F
0C9E83055EBD211EDE43613759B68D1D1127E3FCA3BF15B974CC4C85B9D94CAE
74F5ED35D9D8C9F785E9E29A050604B43BB5B08AD35B1B69E2C60F4745A14BBB
EF8C1D28E7A655E47600BC3D4D6D79229920248DA11B67D1E11A39EB43FF31E0
6E104877F2A09C91350A6FB59CFF4395B700640249548484B071A3D497740011
2BE30A09AC796391363CEF947BE3E1E98F5CB30278D9DE3389988DDE36D70129
F70E2D3060B9F358732590FBEA695AF14F70ABC8F9F74EC969440E0BAED3CB96
CF2171FDE3F5E1B7E83E58346C85A168F9F4CA22285CBD02613510CDEA8BE937
2AB5A86518BDDF0D6280B7684BEDB2BEFAD21EDC45759D2B79EE6C0C3AB3FF57
A5A9E1E9713A6C0CF69BE688A8261B412A64C71141A5E99DC83340C4715086A0
E9DF17D51C2390D04A11A038A4AD642CE7AE9ECE8C92FAAB641F234181DFB26E
BA8AB37B5C35D070FC7C7F6B3318F249226450F8F29E75146AC6435A1FEC35A3
ED53E7EDB5DC9884E29D59DFB9DBE6ACE43E4E01343B863924E7411A82A94FCA
0751A45E527FB2556B76719D73756CB21363010636F51877911BCC40ED2910C6
6D6FB986FE051D33623F1880D27C0F7D73D847BF996FBD60B43E26DB782CE4EB
AC4280780BEC2196C3DF8C08F90FE1DA0180F12C0BC09A1426CFFE7174ABDF42
3E8A12A310FA0F7FCA87A42D4B43CF2D5C2AE3C1BC64D3E91B09E7B1F043D2D7
16D5A89356F39EC3901F468D4292BDEFFD8BDA9162555573F911233036067C94
57115014F2ED0B5B45545E3EAC33A374427FC7F59A62E4650ED4D1AD0F2804F0
A896DDBD93F18F7043AD73D11F3CD3E23E725CABF73E2B9B985C15AF76C8C79B
30EA5D28A67FAB358F787743E30DB5D0B278EFB6CC3DD32C371EBCADBF50C733
48101C43C2713CD85EA28A191C6CDC5B03C24BD096121AE0341DA0549AB84C47
AC3DFD1CDF897E3DAD4B19BE217A19498FBB486DD13E243F98F09DC3AFCD98A8
E57BB0622476A2E82592B61495605454F612C02DD4C626D1537AAC7F194377AD
4768FBEBDF4FCD5588917D37411A5F818F9B8644F47D601182354BB695989D4F
3E0C98D8650716C407F37CFC4C3F522589457A86704940493D12D00A7772EAFB
B7A09C3359B13BFCC9ED0D80E9E7270A850F10BD63018AF998507C1319AD1432
30DD314C86669C9EAEBF7A505504DBF0492BE03195976C57DC4B7603038D6E1A
8D6E18DBE26DE76469479963481F3CC7002DA66BB9C229D4912968140D09C807
52AC1B7CEA7AFAE9CA64662ACAC62D30A1D58C1D469B3255CA09AB30BF17C0D4
6A0A238F9084F88DEC3349742D3A5CA29304FD2100E8D78F0C177F552BDC9BB6
99D358E164D88B56E6F9CEAE61FBB850C398377A8B3B9EA3B80D5E1634E789A5
C10BC16906F773AA9AE5ACAA60224313E7A7EA9EBEDD1438CFE2274E20B1A09B
43006109A4EEB8674748ECA9B963B9A7D9A212FAF69822883FD8A04665A4E907
9C507260CAB18398026DBF5B3449C3EA414C478A26FC474AFBAA0D9E9C080B00
AF65D3D53D3F14A66F649146B51391834051BB7F373CA27402E66EF15DD9FCA2
58EC2712972324D5A77681C05F556D49755397F8585F94082D17FEC5FD6C7CA8
27EA89D97F39906F11D2A5524944B2B17E895A9862CA1C8CBB06210D13C35A95
B63056A0EDCE2220DD1538C8EA9FCB588B2B69A5F301D2C1605E1994394B796A
C5855DC626F5D275BBDA29C174204C5B8FA6E3FB1E9D8BACFD215ECB6538B9B1
6FCDF2D7564365DC4D2AD99FE4F2704C327E35FB77CEB56827B7AA0064C5EF7B
5FA8C59615DF7C1626D4D72F4F840CB0000EECCE21AF50B4F56F7ADB9A97B9DD
0E8048A1C140BA2646555A6F2136C79F30FA2B86701FFA3F843FDAA9983B4C98
90AB2D91759900FAA504183820DC51231F1E800A77266A0DAD1A2FA1F4E8CC69
69A74E7E8D6945ED4A730B66F160F2D6A31E66A7422277F7C1017B3D43535AB5
B4AF0484E6DF1B4E66A9C02F3E36EFB19E67AA90FDF9816F57DDC16F36CD44BC
E818957208D11E44B24B528B33F387679BBDFED7B002F72FA5709AF605F5D980
FDEA576082AC09407067F4E6D9031F874A34B00F984B0A04B00E1CC1D1195529
597114171D4EDE72C8F335740101A1DBB37A5C13352DC2D684FDBB2E568A8A66
2A76A9DA05E5CC1AE4E45219E35560F6867A14C1FDEFA22FA46796FC11DB84CB
395E28A8FBD5962941267FAAE6B6C251730C2CE1611EEE096CA86E90321D114D
A574A0F73BF7D7896982B59B46EF5402167EB664417D48F904F8395EE139472E
5A809C8264BDFB0302D351B7AC1FC6D95A96B04205C9F5DD453B1D3838591BD4
A0179BDDE6524D9D95FADCA29EA131D482990CB64C201664D2D13D77755531B7
A96044A7951CD66900878543F72A38975C647A35ACC4B06E44A64CD3F802FA9D
5CAA4F225413B37AB512CB9320FDAF5194D1C327D8E4484D4AAA68D237A7CF0F
DCCEF54CABA501638D44322502D57810A8F8B31E42EB75884AEA8AB961A906CC
1BB915B5C86EA5C13A68D1840431D9F50D25E5E2F3A4A4518E8EDCC7A0D86083
1567FDD5B3BA69332561D97F5FE37C2175060C63575145F35637733A3DD5B172
C0C46743CC30671F1E78A3CF7238B26D39F7F7CA8C5839AD92BB913FB3DB6B7A
CB32CA6E4F4D631669F1155DFF6BCEC22ED9A83BB5B575C0E0B4F1F6D302CFE4
41B15E09DF12E5B2CF95CCA40329F132AC6FA258E50AA17E220D38CA3AAD6F44
C43FE6DE425C2F627DF6974820DEE106B69D795DB3D6A4EB2B056CE667531E61
84C8BDCCFE4808479B0585FC154A5C951EF7F37F9F8FFC57CCE1063AB7AFFEAD
7F2B6BD949559B420DD055671475905983E84F59480C3CF6B087345119C91AB9
5CFDC80021A81461071CABDF469D47559F9369249A7291322B31F4313155493B
C317F89A8948EF2F0491D505A649104701906566B2B573D2DB31C36E4B7FBC29
DC35B47DF241FF1F0EE3AA414661EC2C6D6906330D09823546BE4329B97EF8ED
3141DB3FBFED8F1CDA2D49D7B29738143C4753897F76AC37B954F6F8DCF195CC
E025B489628E6026A0996E3A4F48E1DADD69B75783B268400BC9CF61EB191D06
41C7768CB7980ADC1E65591E8CAC11A84DFE3F09633B0FDA064321595E0E6B9F
49A908F0C231A396B14B2C655BE5952539F63838566674263F62D3E6D262F980
CD3240CACFB36B9EC5EEDF01F3110239048BE84817BC6C82C18B54D4DE7D685D
842B8AE52AF23E1144C8A2FA7EC9D9675B2F7E4F64F23CCCD6BBCD792189A12F
C9366BA7134EFD67A22B492D1E05C5591EEDC1B75251BFF8576F1C9CC5C0E521
3FD3C8C76C78B96BC2C4563C7D8040455AD7816B4B511197F2594E435DE24A04
89F11B804FADB4B528DA589E59FD355EA0AEC6FF05BE3D25C16354255FBDA135
71652593CE33FC4F4DC959CB0F63DA3476CCE84832BD5D6AE3BFF5869EC2F4C0
3173B54416E29DB5478012A34AA27FE29F4CDE76712A4948AEF95DBA69A99157
ADE417810A48AA5E4D4401B68F4AC27654F4BE0E1384A66A426995B622537DAF
6E00C3B210F7C0C72181F53E38EA5C69B29620BEBF01FD780E0983100AB715FA
4C7B132A46B866F4C7596B3D3867CBE5B6409D4903CF346568E0B4BFBE38C798
66BCD14C2C92449525BD879F6DB3504797F850EF6DA9ABC92C2CC6DAC817EEAF
C6E54F9A3094DA6FFA490EDBEEC662169655F6D78125EE549F1C0ABC1D51771F
4B609B835A626F14DCFCBEEF11050F177D3B00BEF87D9A7CC4AC66E01E05621D
C5716823B95E547476FE504CB17DF5014B1776F4698615BCD0E6CFFE0797BA49
D18B10E395C2547AF00819BA9D2E365DC76CF93472D032259D584E020CB5105D
D5ED2D86E5FDE14D338069168B633CBFFA98F68EEAF4EB1D64698863848A5E82
F7C77CDDC773B7854DC225ED97DF0AB8B7A26FF50CEE9982927DF994271B1F39
BB29575F0D72916AF4B387EEF5A0BA0AB57A17600467ADC64D600AD4CB66D8C6
4E1ECA3CD2D68EC6563CA73B0BF0D53BC5CC5DE889C15E6EAEF2259E1A12F791
CF64CF7BD79623962FB0309E6B7E416A6EA773D06645E292CED6B53805D9798A
83E2D68FA40E64F2A87F902F283615BA37673DFAF9E0D2ECB0F792E510239973
E0142B0C8663E7FD58921A558DFD2E0215B0503D0E1069DCA336EFA158884F62
0636C6F8828C78A09BF1DCA721854E8AC1825FEB89945AD1D5EB23E400AF53E9
7A59D84E23AAF73B5F5E50D52C60CEB32E0A5992CD2DAC4E5575DAE435F65451
AEECAB50A684882F5AFAE74E7DCFD3BCACC80C2E63255BDEA45EDC30D7185614
5AC70F1A5B6C282CD2B7284B83AFD2E33DEA0218424B2EE4AF884491251E9099
681293009DFDDBF03E92CB257C196613FB795FC468D39CB8F3E469F9D141FCA2
1790E0434B8BAE54E259EB9FC3E60E9CD490BADA01FFD3DC893044FE10C8FBA1
7B28C44C54C6929CA9C20B62EF8CD578BAE6679AA5D0433A8473690787DF0166
3308A8FA9226A095CBFADB12AA96D16B63ECEFE3B1B4635C41AA9C920DBFBA64
279BC875BFB6F5D0D336C9BDF01077572B7FB2D4365582E4B187B3231DE29AEA
B7DA0D48A6C4415632D8E1A81CFBD2DF7A37B6A3A620BE149E1D79D921B0F316
057E69DA6CEBD01779B2F97004EEDF96D353F451D9A5027FB887045C3BF765EA
4F48CC2268D2CEDE02799D369A7A5AC8E7190739C34179235E3DF6001C746B45
CED68C7E9ECF4FE40725E871B1BD379B921472ECF6A74E4F91ACD9CA3A9E377E
70135504B1C171007C9CFC745B2C46F3E15C7DD67030DAFE514560FF7862337B
B4A22BA435193EB49683217275294A0B16A23DB561072D7D4C2EF6631C96C0DE
B80748DF16C13594C6D7ECB98DD505E87E35F63F513AFE5016F3FBBDFC5A6938
1395A9E7D07FB25E02D7DC4613C87A3AAAA92C5C6FBCC443D87497AE766C9F05
2D6C66D3FA7961E7B1A7BDAC4EE519E790C41494877E55DFCA7FAFF1EA78D007
EAAFA4954F44DDF7918BB3F6B6B856CC86DF5B5582C0CD88D50392E3F3272F5E
687FDBE89691396B57B61D2C57193B96590305825029001090C0EDB104A0E748
4304B888D65C7C412A1A27D68EDB9EC6582ABD4B675FA4D815BAD6DD503BA1D9
649854613E24EB20D6B275C4417AF4EA64AA7184265572F12336B615B0AD617A
2223E12779F87E724D9FF82AE1D16267478F4ABEEB0664AF27A689E842C2F7F8
2AA941FF4E9BA785702A1AEABE8922F81D9E086BAB620D397E5C42190679A0BA
481F72989DF07A60B0C482E8429908F6A9C0604FD17B2A2F43E93283E8D6FF36
49860B5EC963CD87604C4DD89EDD03764A660E86D83DA4E8BE6467563A45F789
8047382BE1B7891A84579138E8AAF6F32486DE20D92C7FAF62F97DC462201000
06B8E50404FD719E27AA87C293C6E6EFB659DB36D61764C1E303794668CC451C
3EBFF06B5B02D2FC02738AA6468C079C442B588269A8D2C38628FFD0CCBD9A51
E485CC0CDA51C133AE8F1C5CF65F8C5F1523606B7876DBEDDDEF185DAA5D3888
7CB0DC1A6FE07267032C099253ABC5AC75E590AF5B35BED16594E25586E7B98A
3E13EB8B6A0E7CA310A5437173AC76EC655990538AECFA4051D9E241F7071374
D40ECE71ACDEA8BE6861AFF305CA637DC38B7EB2649E796BEB195E5FB218CCB9
C10464938CB3AA629D4D49C99155A682B0A13DF6D9902F43CD8C28BC594109D2
3E750E30B80E5245E3A091F0F891FE5131D2722563C06FB2A91D4028A4A537FF
6F107D76956FB4730DC10D97A98B4BECC91396A2CD8A2972A0D601F7ABB88974
0C3F9B894AA104ACCA2736471284E03D692B02A2B0E42A381D60CE29CCFBA20A
CE54C81CD5A6FCFEF31486D4AD59B1E837720F18450123119BFECBFE815C0C97
74C776292C904D50C70E452DF2EAE4FC86BD94A954849E486B6E0275178896CD
04D70AACCB0222AAC36137C2137DE0D73AFFC610A27927BC8CF8EB3F63F01323
1CE32EAD910271E3ECD64AA68081D14CE458B6DE53C72A44B219295FFDADDD72
D95ECD77136CB5A177D5082DF5D28ABE23D65B3DE156A1292F72051FCB4BD48C
9DFA27A8BC8B0BF48551C8F6F2966FBCBB36B4B1996C062458695F470F033482
EE0FFA09BD8B7D76BD36CA1E1667EF85B3D9CB8F0B53D5E87608598371BDE98F
03D513592EBB50CA4213CDB948F8E3A264B603B2BCB230C99EC2190102DD3AC1
4CA97C307FB762C72EA7F84FDD76FB430786A0A068D9F4AA70640A44AC944737
7991F46F78A0550865D40B4B8B30395FA7A78F5B436CF00051A7EABB2EF87305
A619F7D918222F60A45BEF07D8D96E62374AF20C8A82C7154DDD600623D633D9
D4CF9DF28DB02659F2B387F84CDD3DFB183F06D8E16980486DF39F9A43FA77A1
BCEC0604C6327C84FAB6CFE80C0D5A3744C22690AFC6FB99699361757536A48F
C7AD5F3BBBC8D7C0121642E5AD72570EB997373F9C309734C0E6DA511D0839EA
287D4BC528E8E540B9A4BF68D54798C670AB32D7F63D5AD191705B8733E0FC09
2B08F518C099A01BB32583C7B080B556422058A60960F4CE00E97D489D0CE420
8359A20656B15C1628E8F2E322E5CE5DC809D210BED16B92712DE0B6503A04EE
113C6758D18E97AE7D7F47C540603DCBE9F955FDF77235B6EF687D9D2854BC40
29033BD9C333C710AAAB6D3256CA67DC46DAD4731B34295B65DE11E42818FB31
D405FDD09D1495E8B3DF1A906030EAFF0ADFB41465B2BC0429162B0B44523F86
E2038330066A40555FAC01776CFD06CC2C60C82DDB02ECFDBD4E1A10BFDE45FB
EBC562A283D176C2426A0E022D07C5411C261D467F6D6F7E326DF8E434035463
1F0DD6EA5649814A1753ECC480625D7DB1E6E0B999D052CC5E1FA6179B18C9EC
EBA908D8B33A71B2FC416ED0D731AB3ECB9C3E04E202788BBE6F95E387D0FD9F
5661DFF7279A43AB7E06E6790D59CD86BE75DD721DEF363B65AB018F0E80083A
E0E197BACDF1722D07DA7A0980D5A90C7ACCEA5FE56648F7884BDC75746DF93C
7C022A65891222D774E52C64A89056516CDBA73589E0295D094335BDF906ABE3
1DEBAE0E7407297BF2B08A8087DFB90C2D8494D04AE9BD820A69D43617848500
B284B3CA2F0DCC9F896093AAC5FBFA8250FBD9925BB0CDC58E6C4A95E10272CD
A2834070E16FCF3F16AF3F377307A335B99D116357AF029C77A3FDE6C6679AFA
5511FBF5B55AC342A0BC3F8039DA4D5C86FBBD53961A30530175FD6229D69AF9
E7F73BFDEDC8BF5AF598B33E6562C051A7DA9625BBDE0EE1CA3380A99AA49F2E
C50576E2FA17E35F6F65BCF2443D62DD18057156C241AB36F5A122B3500875A7
2D62567F91F5F20D556E95CEBF8924CDE1772E1D87FC35CE3F8E68C6535A4263
6F534F2BD89994F71F907CC0FE5935DE56924451F1B89B131186782ED21A2D33
425207FD220FF8D57E14A5202536F19C2CC0D7B2E173A95E9EE353A147377ECA
1DDFC28DB8188D9763B56BEF902FED3716282A7291BFED44D52F0E4DDC23CC86
3B60A376686C8A807077DC006AB26A2B905FB8E06013E63CD8F5D497DF9A9CE9
BA01607F38A3CC5D0893049E66FF9CE344990D8E705B0452706550222C18938B
3324E67788D14CF556D962B2A81D741C264899FBF33E71CDB1947C7FF473482E
1556DE6B1BFE5D0B10531F43E279F20A53BA89852596C94CFCCE02504338F87B
A8C4D2EE794DA8383323EAB15F922F16ABF363DB46D8B83B7D5EB6EC0B7A2BFF
2B65251F0F8502C316FAC47C6962F6AB572706C15B2B2527DCB67AF41E300FE5
D1CB74142FD626EC320CB09335EFA6C27E102F7D897BF719F9E643602340FECD
F6B3C16C59F1D9D70FD0D67FD60C7A5518285B43469FA034A4C64F2E4A41D023
E3F25AC321871F52475C7ABFE4195F6BBB6BD5830088A987D37F9C0FEEFCEEEE
0DB5DD9161CC190082428C87977CABA0594CC16500F32996B6853EBC86FCDF0B
6F716820F58DF2FF1D61A3392B13C2BA6A0ECB2CF5EE5828E4421C005F19759F
98EF37B20F2874A6699DD58ED03ABEF65ED35C6D8E31162027D0323CDF097FCB
2F76E77E58302009E1562F8E32A604AE1C675B70AB442171D5159F38A0A6C8F8
F7A04E5EFE6D776DFDDF7F4A622B5776F16F9FA70436132F426CE2475789409B
EB8EBE659BD30264922B6FEA7E3457CFADC42D36530C02DBF384B2CEA9A96BB2
8DF671C04475C008057117D7453C7DB2DFD0E9D287B4EFE6812FE904C01F50D4
B44B492983387FC983F93925E52BA3288847E9D3DC879377A13C5D1140277DC5
9725D08DCA7CE4A45C8D030E1377B7C366F5ABAB710C58FA391D042D52E341B9
59C772D14F8FDD306B66B9355EFDDBD92B5B2C8BD2B147638251FB4F2F2FCFF8
56FA5F4239BBC29E9F0206897C141E48F88D2F6FA0F5384D3F7372E4EE273540
A203863364F5D436327336723DCC73885E36FB783A63D4FB67A0B92ABEAC19D7
EEC0531218335DBDAB5AD9620CE3174B5807DB44AB398F6A3EFC4D1B22C38296
00D740133F78E6C81A45767C2A1A984FCE6D7295751A7594C98E3D1312A13CFC
C32D47FCA51779B32DC3532B327C0DE8D4ED727C0CB9DDF26FB36F78B0050ED9
7A98343E6E02F6FEB5F20986CE5D41669EC9868001714941B3C101FE8267D366
E0D1D8FE563927109796B6B6116F641E24AF5CED9394078493EF9DD5062FA35E
484B935E2B5212A0EAF11CBC0F5B6434549FE1ABE58BC629BCEA0D4F53C358E9
25723B2CEF85B6202D50FC9A12719EDC0A4AD9AEDC6137B01CBA38B1B9AA763F
56FFFFE91045AC392FAFA6688275BBDFEEBF909ECD2AA7A6549E644174B2F4C1
8573604636DAB68601260E0E1B33EA757947EBA9176295DA5025B248CADAD666
DF7FDD0B1B9744576F8060FA1BEC6A15BAADBA7D7E2BD6B59BB268A2D9A540AE
C96309977435FF4CF4C58F860B36EF5BBFBE2EC76FE4105DB69A802E485DC81A
FDF3F629F796EC6EEC36092A58F3601DAD0A96C32C6BAB645EC570D1BA11ACAF
1E658DEA873E7A5DF4D51373A7F89587D9E18F28EF1EE41253F9DBA834AFB924
7997A7B8EFFC66CDF5EF31CD28FE731360E35AD600E780F5CA27BEC44AA46EF7
B54F4F3686834EB15A74B25E1EFFEC3CE27669CCC7F6C101ED307A41567EADA5
673C30B5F0576958708842B99AAAD15D7354EF49D4868F7C0683486C295AB5E3
D4DFA02DFD82868B8933D255EB9458C0FC2A55052826C02D25636DA14E3A1B45
E8AE6D170D9540CC9B3506B72E4058927524DD84CA1F2C7334EC54FD146C4940
0E920E11541B269B233AD706A423032BBF20220FBF6C69E8A42AA3BCB8853F94
4F6FE5BA604EFD53F690B204AF3BA47542BE949E42F993DC9366C7527CCE5687
C9AE5A6E135AAEC9795FAA4C5A988AFAB9798FA5F2A5252AAED5514FA652562C
35E9EE68138905DB1BA7852E2E84E37D0C10BA631AB52E0342919F3E5F934958
5D85022C568E1A16273A120AECD83E413878069D1BB6CA69719A7B4F1D7B6BD5
45B14181FD05B0C61FA1A45D1F2C43320D6F2405E0D24823A9A002B5C6D83925
D535CE10B5C021D9FB4FC017A53872B355CB6AE44F26BB0EF4E04401B753D616
35E3448837C604B8F512BBD119A3369BF6041F6AE86053E97FF0745EB5A17549
F575C4DC2999A5D1A7DF5BA3F693B837829AC574149005FDDBA400C1F2CBD4DE
CFFBBDBB2A1D3C6EC0061B1BEDD25F036E9955CC9D6B0EDABC80FCD8853E7AB4
2E7226D32F8EEC3AA1C1C4226460B7A3D7DBC350960F9117F420C72F0B3D48E1
41E505FFB17E532131FC8A1617833FD9EB0695776DAEA282ECB0BAEA811B8395
A964843BE5E3C1457FFBEC293837EE80647128C43C41431E38C9B6D2CBCC12B9
137A4DE0BEB24BC44C76C7F0B8CA2DEE6CB227E2660F3875FD0A225F1A7A8EDA
B46F6A737D4FBCD88EB7944E32B0A303DA6F12CF347E45D9579CE4A191FCD3CD
D81BC376F478DDE17636120884EDCF1B1A95EFA5C0C94082C4A1AE75171E69EE
B0324FECEE089DFFA1A972F69197712648E6C388973D91296285A3B72564F31D
A2D5B0A4242948D2D952A3BFAC095E44500D9C7AFF006B7AEBA806A545D83B58
60E7F6DC4C77564D209C352E4CAB34FD2C9D59A285660E95F62F2F43DB8F4811
6812A62467DE394E8E3456631FCDBBBB7083F39FB5363AA96D5659257F3932F2
B095AD79B5DE34DFCB85622F1DAD06C433AD91CA2B178670851991393A3A8203
199717AB70BF7CC4BF719020E0621837BC3AC5F82B6FC9E762657E318918866A
BFB486EF167098BA106443DEB15401C8CB7855656FE78C56DCCD9615A8C92197
F3357934D24A3E928418103BEAA03E2E9643705CCA47BD27A310AC3BE12DAF79
4EF3B2C291CB618CAF8A6343A942087EBFFB2CC4CD1AA45B89B9BB0B1A394310
6CD014EC877BF43C2E4D0282E75ADEC14A745EE9AB56C97850EBAB4D991A8412
521008AEFF2E2B23D911C1FBF14D6E107525BD8A376F3D86CB257B67B1227434
6D1DE15473704A782196D0CBE8D7CFB7D6F02517545256F4A90211A8C9A7146F
0055DB669659BB95928A40B5FC6961E5FDA18277D79134B68DB6071F9B3999F2
F0BFA6F41936CD7E93BE0FC79862FD0B2CF646302809C47B3CD006AC6EFCDE7C
1AB612B98F6CD141DA7C79F4D2F6D04C8E64073CAEF9E11A889D152DBA3FA18D
B51372A672C801D3444E2ED2B29EBE4422963640311A598DF8D7D37CFA4C7301
60BC878BB6FAE9C82653239604935262C83D527E33A93A8A008311FA7676C21F
F1674316A9B7DB057574FA98A5DB9F7B13878D8946242B339880F6D46C46814C
FE9DF5825ABA3CC43CDB48A3ECCC88D7B0A37A3F92935F82649520B9B3DD116E
2EFCCAC781E76F4145CE5A7D76CCF23085F7ED4D85603D63E9AD8F4B8A822C1C
9F935C70F9E792F0DF7B112A0DE95DA8AAE4A6F8B04E8E08635C9AA453F65322
89E5F4B6ADB99EC1E77B46197F30B2BD1FE09C3A301E224398CDA58178E2E346
171058EC30D7D0A17462849CEBEEA56D753DC683FC85E9A3F9E0E3F25728A225
458C1ABF4AA42649375B491D3C9AE6C0B064E26148D195AC07FD58A0049564BD
3D59A9F29FBD1880851612DE9B87EBF992EF7A92590B4EC384EE15D1756CFD54
770E2A8D7DD42741863834D03D391D441E9669F0D2474206A65033AE02A41649
08FEF8FD537FF0A2606ED858F72344938879E4FC21E22161DD56B0E9A28DFAF1
627799589A8FC997026C3E13015807439564E661C3BEF56C8477AE145CB18CBC
0F98392E04960295B947C70588C7D15A649733618571BDAA74BA5E2BAB26561B
CBD5BB14CF4BC98CD1F079CFD32F185FE3A5EAB659A5567C949AA049FA759179
8B71364835612211B148B0E029ACA90605F9BAB601BDDBB454BF6D52FC5F3113
775C3BF8AF2056A481DE8644F4B419E3C27DF177A6DB72F39C5017613D262E75
469402FB98B3B36E7F74DAC174AC22F76F89FE1F96D392C37071268B4115C63B
389B364BA61F98EE2B0B7B1CC369DBBEA3BE6EC5B55402C00A0C32532A5ED906
68FF86A9BE37530C48D9D0DB526F2D4997CFD03858FD9AAC67E4CCA49038D6A1
62C7484508D886B4A066F3CAC16EE015C407604849E52C909CA6550CCC574DBF
432CB3FF3A11E68FF29AE826DAEB627558C418C9CA736D871EAFCD13CDDF2D0F
E92FE27A5725E6C36813C9AC74E09D13D1A1E1D0DD53284C7388D89FD0A02A70
766F4D95DBBC06B09398C0F3933FB65DB2A759A368CC7D771320B9628F4572D2
8E7C7BE5C2C2644707AA59D1DC1331C37E78F9D37DCD871E239C4EEDE9D9D551
7CEE810EC16A4B2B13BCB9AD383CE38A960BCC38DD418107EC3316E9F3793E8E
B67E711AB2B74D99FFAA7D09EF28A0378642CD349A853770C1CF80E0B2B07B42
73C793472011B35E44FD7F6BA7615716BAFF220BC8AE103BE72EFDF2C065D5EF
25138FFFCDA99679C865F0DF9CF3C9374A73FCBDAA143130A5D418DE025AD7BE
5D99FD2AE376EB1C85D14FB1867C8B7AAE57050FB00084079E9317B79512AD50
45C512814117B44F254AF09F210A23EB3C8830F91345BEBA6ACB55E935E401E5
BCBF66B3ACA2E3A9CDAB1A75C32D604217F3CE1F17AF086E5E60B76722D3BA46
72682E18686989C52B018E46EBE68892CDF39F5880095595BA3037FF0DAF6A2A
DB4AF7B04C9CB77DC37CCAD24E5A539C048DA79A6748951871970204587A65D4
2ADDB6A84F77C3DFADFA809023A458102CCDDA88C577EB525075139740C5B099
E01650A8C56B1B595522ABE6C43A29AE4AD4C770A5020D3D8C0C65B678F7B282
8F0F80A494E8C65BEC46E90464C112F562B749D660ADA5BB3698EB295DF2CA85
DC5D1A8D8E6B62FCFF1AF448CEDD2E1FB69385ECA9374927D6B010F258E70664
E01B3C9349CF8B1216979D69DF9EC4A31E684B668F6A0D2925B37E761C4D7620
3C99165226C5F88956CD672CEF3714E5512A11484398B81A9F30DB91FB13363B
2D6C640F46E6B36550BB2491F907E631C828888A95AAE488DD94B83CEEEC310C
D028A2D5B9144F2DF5D8B6F386E82AD588103538FFD763759AA08AF60EF9549B
7CC26816F1C40E085A20CC7F89D171202ACF3BEC7C65FA78DC9D7CE7C73184DD
4E68C9FF3E9EF0846FF31E9C0DB810DD5BE9EB36BC05E2A1757FFFFC510E14A2
D9828A043911BC13E3FEDCA69E8A5A97235FC92C0A5A6F5FBE3A6F64F763C0CB
CFAEE6688D096C2FB1F4394F3FB8464EFF7FA4A15CE567EB5D580DC54F353F8C
914146CA6BAFE2E72BDADB776E61A83E511F89F178A38E254A6DA6D7202B2520
CC6C43A6953A5CEDB453EA329C707746305CF9228D845D011C112F16BF51E25F
DEDE601ECD5329234DE75DB1ECEF6A076E0CFC46B55DB7F0AF05366F680309CF
B41178743D21FFAB5A0ED8B1807873D047539C85FCDCDF92DDA992FA3FBF4999
537B579CD7904CD911BC80B0411D47AC65A61C6EBD9668C1371EE357ADB5BC92
617B741E502DC50E23357D0FC8B5B9580468E486DB5D57149BE6DB583C2C812E
B3276C300A58BA92E46FA85D65DBCD4C2D41AEE3E8C04794B0128AEFF3E158E4
4A603D5E719762A007D77BFB4DE93A1A348E5434CBCC3A9F88B0D63E91615F18
1F7C83D306417335258468530DE3BB1C06E55055CD8330C4611B33767D29B328
913E29B809C400A3F8F7E97F05C017F9A07EFFE9A56022F366750C3454C0AB53
7E7E2EC75E533B94C6320CFBACB6A1135EA1DD8AED05C1D5CF3F3B41624B02E1
F9C93AE270A58B3B24362B4FCD827D213A02D39E2C8D9A95E87D4E464B49306C
6914E6A032D80690B40448A2A620CB786D43C6DC5541992E1177B2B876D285BF
77854AF5BE55FD22570339BC5DBA1C7EEE0BF66C825425F6FF46752857D4E41B
D46844A3EC975792296003861CFB5A6F74407C3621F59B7CDA2E1AA7E973D814
1A2397F448C46BA1640EF30FB527675D0480C9F1A027AC87714DF92F169587CB
3BA16BA8C69BD4C5FCCCBED54044D45F004DB1B548800C31CFC10919672B6067
11423149D9F332F2ADB1F6716A1371BEC1611204CB5ADCBE4D70DB49E29EA986
1CE3FCF5AEF203AC75A6E0DBDA625F48D342A6ADE40B06DA1BFCBC00360DF254
22E18EA7E283243B90A575B9D5844608BE810327D24532C52B8167BB908C5654
9F2127589BBB42C9C0E26F55782BBE59E6FD5F1E58960A7B5BD37B74576AB9F4
2ED0391BDC6ACF5CDC8A222C81426CDBE3A51B874204E40E030247AD29D105E9
75D41BCB0DE2760A85BF2595017BFB4C902AF3C0E2A273505F1E27D3FE8CBB25
636FEE611049D67B1A9E6993612B8DCE3D0058A1C8C7F6888872AB81CEC8069E
EDA6452B61200C81BFFE3611A339B60B88490B3A656582CB60AE0DFBC18F652D
E012D8F58891B6ECF156BF3256D5C92155081C9EF16EA92C56E4E8434A60149D
5A0619C2ADF812C2B81F5992BE6783A7FE49E9112D76231B6DB57B18D0D20C5B
76C8C51691B33EB6B247B21AD15C24F843BD1D2150DA4998890AA693113186AA
A4D644CA8735A4E964F500346C8A6270F5F2F2879C6FA9FEF0CE861B5DFC1910
F9D173D5D10984E3064D8AB8AB28ABFA3596B447A329A54F5A6E66BAE16BA776
910F3AC93A90B2D73DBD5E52B06FF4D4E79DD2436134596D480C8AFC82342868
4730AE9E72FF0FAC3CFBE5A94D81E581CE97DF06830FC4222B79D9FF068F1138
39C41C93C633C2D97E236411720234F07A9071D760C19BE468111EC8ED34A0F3
ACD8CF4DCE9FB90C3AC9AD11247CC85D808ECA806E037BFE3ADB92059D975651
51BCF21C5B4A6BDB0F25BA0C963846728B5C7B4B596CB8688CBC444FD4F2881A
14C31669CAFD966BC3E50BD2F2AC46DDD82C75AD5AFE06541B9B83B4C9C1B995
B9BD7CC2D4B4986DD203C2D40D60CD36A9B51A1D4A2946B9B0FA6181716DAEF1
BF275F17F1031165DE34627A615399D9227B8C136F865D81D5078AC722B54219
5F80DA71A2CCDC7D36DDF0B363F81D3D160D09734D50262AB32273AB7F77D507
52B88FEEB908F5A34A2C33AB4270BADE70637939687359B42F80F37CCBFDE1C7
29667FADF2C55EDBAEE7703993CE0974490D9DC116A6B7172F12045AD6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 37293595 25732579 1000 9000 9000 (psv_about_pl.dvi)
@start /Fa 12[1037 12[1037 18[1453 23[934 1[934 7[934
5[1037 570 3[1037 3[934 1037 5[1141 1[1141 7[1246 5[1349
1171 3[1246 3[1349 1246 6[934 934 934 1349 934 1037 519
934 622 1037 1037 1037 1037 1556 415 934 415 519 1037
1037 519 1037 1037 934 1037 1037 6[1141 1246 1246 1763
1246 1349 1141 1246 1349 1453 1246 1453 1349 1556 1037
1246 934 519 1349 1453 1141 1246 1349 1349 1246 1246
1896 2[1046 1[519 519 1037 1037 1037 1037 1037 1037 1037
1037 1037 1037 1[519 622 519 1046 1[622 622 413 5[519
20[1046 12[{encqhv ReEncodeFont}94 1868 /QuasiSwiss-Regular
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 9000dpi
TeXDict begin
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -9000 -9000 a
 /TeX_matrix [[72 Resolution div 0 0 72 VResolution div 0 0] {dup dup round sub abs 0.00001 lt {round} if} forall] def /unit {0 TeX_matrix matrix invertmatrix dtransform dup mul exch dup mul add sqrt} def /trueunit {0 matrix defaultmatrix matrix currentmatrix matrix invertmatrix matrix concatmatrix dtransform dup mul exch dup mul add sqrt} def /mm {25.4 div 72 mul unit} def /v{/Ry exch def/Rx exch def V} def /V{gsave newpath transform round exch round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto closepath fill grestore} def /fshow{gsave 72 TeXDict /Resolution get div -72 TeXDict /VResolution get div scale 1 DVImag div dup scale get cvx exec show grestore}def /TIFFDirectory (bop/) def /EPSDirectory (bop/) def /EPSSDirectory (epss/) def
 -9000 -9000 a -9000
-9000 a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a 26433 -9000 a
 currentpoint /OO_y exch def /OO_x exch def
 26433 -9000 a -9000
-9000 a
 gsave
 -9000 -9000 a -10772 -10772 a
 currentpoint /OO_y exch def /OO_x exch def
 -10772 -10772 a
-10772 -10772 a
 currentpoint /p1_y exch def /p1_x exch def
 -10772 -10772 a -10772 41669 a
 currentpoint /OO_y exch def /OO_x exch def
 -10772
41669 a -10772 41669 a
 currentpoint /p2_y exch def /p2_x exch def
 -10772 41669 a 63638 41669 a
 currentpoint /OO_y exch def /OO_x exch def
 63638
41669 a 63638 41669 a
 currentpoint /p3_y exch def /p3_x exch def
 63638 41669 a 63638 -10772 a
 currentpoint /OO_y exch def /OO_x exch def
 63638
-10772 a 63638 -10772 a
 currentpoint /p4_y exch def /p4_x exch def
 63638 -10772 a -9000 39898 a
 newpath p1_x p1_y moveto p2_x p2_y lineto p3_x p3_y lineto p4_x p4_y lineto closepath clip newpath

-9000 39898 a -9000 -9000 a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a -9000 -9000
a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a White 1362 x Fa(ABCD)o(EF)q(GHIJKLMN)o(O)q(PQRS)-56
b(TUV)o(W)q(XYZabcd)o(efghijkl)o(m)q(n)o(opq)o(r)10 b(s)-10
b(t)q(u)o(vwxyz)p Black -9000 -9000 a
 currentpoint /OO_y exch def /OO_x exch def
 -9000 -9000 a White
1765 x Fa(\201\202\206\212\213\323\221\231\233\241\242\246\252\253)o
(\363\261\271\273012)o(345)o(6789)o(,)q(.;:)q(')o(\(\)!)q(+-=)p
Black 26433 15449 a
 currentpoint /OO_y exch def /OO_x exch def
 26433 15449 a 8717 -2268 a
 /SItps save N /isls false N statusdict begin /setpageparams {pop pop pop pop} def /setpage {pop pop pop} def end userdict begin /bop-hook {} def /setpagedevice {pop} def /a0 {} def /a1 {} def /a2 {} def /a3 {} def /a4 {} def /a5 {} def /a6 {} def /a7 {} def /a8 {} def /a9 {} def /a10 {} def /b0 {} def /b1 {} def /b2 {} def /b3 {} def /b4 {} def /b5 {} def /letter {} def /note {} def /legal {} def /halfletter {} def /11x17 {} def /ledger {} def /flsa {} def /flse {} def end
 8717 -2268
a 35433 x @beginspecial 12.104000 @llx 4.715000 @lly
450.476013 @urx 443.085999 @ury 2834.638672 @rwi @setspecial
%%BeginDocument: rys/psv_logo.eps
/GSexport 100 dict def GSexport begin
/h {closepath} def
/m {moveto} def
/c {curveto} def
/l {lineto} def
/k {setcmykcolor} def
/K {setcmykcolor} def
/*u {/oper_kind -1 def} def
/*U {*U*f *U*d *U*c} def
/f {/oper_kind 0 def} def
/*U*f {0 oper_kind eq {eofill} if} def
/s {closepath /oper_kind 1 def} def
/S {/oper_kind 1 def} def
/*U*d {1 oper_kind eq {stroke} if} def
/W {} def
/n {/oper_kind 2 def} def
/*U*c {2 oper_kind eq {eoclip newpath} if} def
/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/setcmykcolor where {pop}
 {/setcmykcolor {1 sub /mf exch def
 3 {mf add neg dup 0 lt {pop 0} if 3 1 roll} repeat
 setrgbcolor} def} ifelse
/q {gsave} def
/Q {grestore} def
q
*u
6.262 w 0 j 0 J 2.613 M 
[] 0 d
0.2 0.1 0 0 K
448.91 282.219 m
330.511 261.475 291.37 462.656 172.971 441.912 c
193.911 323.317 -7.27 284.177 13.67 165.581 c
132.069 186.717 171.21 -14.464 289.609 6.28 c
268.669 124.875 469.85 164.016 448.91 282.219 c
s
*U
*u
0.2 0.1 0 0 k
128.378 169.016 m
118.01 169.326 l
119.248 142.554 l
133.485 144.875 147.412 147.042 161.649 147.661 c
162.578 166.385 l
139.52 167.933 l
140.139 196.897 l
149.888 190.242 157.316 183.562 169.696 183.253 c
194.92 182.634 205.443 212.681 205.443 232.953 c
205.443 254.618 189.968 266.688 171.553 265.141 c
157.316 264.057 147.722 255.856 139.211 248.583 c
139.83 266.688 l
129.926 262.51 120.176 260.653 109.344 260.343 c
106.868 241.928 l
128.069 240.071 l
128.378 169.016 l
f
140.449 215.002 m
140.139 222.275 l
140.139 232.334 155.614 240.071 170.315 241 c
180.993 241.928 190.897 235.893 190.897 223.823 c
190.897 213.3 186.409 205.408 172.482 205.408 c
160.721 205.717 150.198 208.348 144.627 212.371 c
140.449 215.002 l
f
*U
*u
0.2 0.1 0 0 k
245.832 265.76 m
228.036 266.379 216.275 253.689 215.347 235.584 c
215.037 224.751 224.941 220.109 235.619 217.788 c
250.01 214.693 l
255.736 213.609 266.104 213.3 266.104 209.895 c
266.104 204.17 256.046 202.003 244.285 201.694 c
233.452 202.003 221.072 204.17 216.275 206.027 c
211.323 193.337 l
220.763 186.374 232.524 183.253 247.38 182.944 c
264.247 182.324 281.734 192.409 282.043 209.276 c
282.353 222.894 267.652 225.061 255.427 227.692 c
242.273 230.786 l
236.392 232.025 229.738 234.346 229.274 239.298 c
228.965 245.642 237.94 247.654 246.451 247.654 c
253.415 247.654 259.45 246.416 260.379 245.642 c
259.45 244.095 259.14 242.238 258.831 240.381 c
259.14 235.584 263.628 232.334 269.045 232.643 c
275.08 232.953 278.794 237.75 278.794 243.476 c
278.794 253.07 269.045 265.141 245.832 265.76 c
f
*U
*u
0.2 0.1 0 0 k
377.833 264.986 m
338.527 262.2 l
339.765 241.619 l
350.133 241.619 l
337.289 211.443 l
323.516 211.443 l
315.005 240.69 l
326.766 240.071 l
326.766 248.273 327.385 256.475 328.623 264.676 c
289.317 261.582 l
287.46 241.619 l
297.518 241.309 l
306.184 221.966 314.386 202.622 321.35 182.634 c
340.074 183.562 l
347.038 203.551 355.858 222.585 366.691 241 c
375.821 240.381 l
375.821 249.821 376.285 253.999 377.833 264.986 c
f
*U
Q
end
showpage

%%EndDocument
 @endspecial 8717 33165 a
 SItps restore
 8717 33165 a 26433 15449 a
 currentpoint /OO_y exch def /OO_x exch def

26433 15449 a Blue 19346 -488 a
gsave currentpoint 185.01277 100 div div exch 185.01277 100 div div exch currentpoint neg 185.01277 100 div mul exch neg 185.01277 100 div mul exch translate 185.01277 100 div 185.01277 100 div scale translate
 19346 -488 a Fa(PS\346Vie)-19
b(w)27007 -488 y
grestore
 27007 -488 a Black 8717 3154 a
gsave currentpoint 121.36823 100 div div exch 121.36823 100 div div exch currentpoint neg 121.36823 100 div mul exch neg 121.36823 100 div mul exch translate 121.36823 100 div 121.36823 100 div scale translate
 8717
3154 a Fa(p)o(r)19 b(zeg)o(l\241da)o(r)10 b(ka)621 b(do)h(P)-47
b(os)-9 b(t)-19 b(Scrip)-9 b(tu)622 b(i)g(PDF)37911 3154
y
grestore
 37911 3154 a 8350 5956 a
gsave currentpoint 121.36823 100 div div exch 121.36823 100 div div exch currentpoint neg 121.36823 100 div mul exch neg 121.36823 100 div mul exch translate 121.36823 100 div 121.36823 100 div scale translate
 8350 5956 a Fa(nak\252a)o(dka)g(gr)-10
b(a\014czna)621 b(do)h(Ghos)-10 b(t)q(scrip)g(t)q(a)38148
5956 y
grestore
 38148 5956 a 8717 33905 a
gsave currentpoint 87.47769 100 div div exch 87.47769 100 div div exch currentpoint neg 87.47769 100 div mul exch neg 87.47769 100 div mul exch translate 87.47769 100 div 87.47769 100 div scale translate
 8717 33905 a Blue -25218
x Fa(W)-56 b(er)9 b(sja)o(:)p Black 19329 8687 a
 PS_VIEW show
 19329
8687 a Blue 8717 11489 a Fa(L)o(i)q(ce)o(ncja)o(:)p Black
3145 w(GNU)621 b(G)q(e)o(ner)-10 b(al)622 b(Pub)o(lic)g(License)p
Blue 8717 14291 a(A)-19 b(ut)g(or)19 b(zy)-47 b(:)p Black
3830 w(P)-253 b(.)623 b(S)-10 b(t)q(r)18 b(zelczyk,)622
b(P)-252 b(.)622 b(Piano)-19 b(w)-10 b(ski)p Blue 8717
17093 a(A)-19 b(dr)g(es:)p Black 5255 w(B)-10 b(OP)622
b(s.)150 b(c.)19329 19895 y(u)o(l.)622 b(G)q(e)o(n.)g(T)-186
b(.)622 b(Bor)-9 b(a)o(-K)-56 b(omor)-10 b(o)-19 b(w)-9
b(skiego)621 b(24)19329 22697 y(8)o(0)149 b(-)h(37)o(7)622
b(Gda\253sk)19329 25499 y(b)o(op@b)o(op.com.pl)p Blue
8717 31103 a(Gho)o(s)-9 b(tscri)q(p)f(t)-56 b(:)p Black
19329 31103 a
 revision 100 div val_str cvs show
 19329 31103 a Blue 8717 33905 a Fa(Bibl)o(i)q(o)-19
b(t)-28 b(eki:)p Black 19329 33905 a
 /INFO_dict where {pop INFO_dict /LuaName known {INFO_dict /LuaName get show (, ) show} if INFO_dict /wxLuaName known {INFO_dict /wxLuaName get show (, ) show} if INFO_dict /wxWidgetsName known {INFO_dict /wxWidgetsName get show} if }{pop} ifelse
 19329 33905 a 49222
33905 a
grestore
 49222 33905 a -9000 39898 a
 grestore
 -9000 39898 a eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
